{"version":3,"file":"simplicite.min.js","mappings":"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","sources":["webpack://simplicite/./node_modules/base64-js/index.js","webpack://simplicite/./node_modules/buffer/index.js","webpack://simplicite/./node_modules/ieee754/index.js","webpack://simplicite/./node_modules/node-fetch/browser.js","webpack://simplicite/webpack/bootstrap","webpack://simplicite/./dist/esm/simplicite.js","webpack://simplicite/./src/browser.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * Simplicite(R) platform Javascript API client module (for node.js and browser).\r\n * @module simplicite\r\n * @version 2.2.27\r\n * @license Apache-2.0\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport fetch from 'node-fetch'; // Node.js polyfill for fetch\r\nimport { Buffer } from 'buffer'; // Browser polyfill for Buffer\r\n/**\r\n * Constants\r\n * @constant\r\n */\r\nconst constants = {\r\n    /**\r\n     * API client module version\r\n     * @constant {string}\r\n     */\r\n    MODULE_VERSION: '2.2.27',\r\n    /**\r\n     * Default row ID field name\r\n     * @constant {string}\r\n     */\r\n    DEFAULT_ROW_ID_NAME: 'row_id',\r\n    /**\r\n     * Default row ID value\r\n     * @constant {string}\r\n     */\r\n    DEFAULT_ROW_ID: '0',\r\n    /**\r\n     * Default context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_NONE: 0,\r\n    /**\r\n     * Search context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_SEARCH: 1,\r\n    /**\r\n     * List context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_LIST: 2,\r\n    /**\r\n     * Creation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_CREATE: 3,\r\n    /**\r\n     * Copy context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_COPY: 4,\r\n    /**\r\n     * Update context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_UPDATE: 5,\r\n    /**\r\n     * Delete context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_DELETE: 6,\r\n    /**\r\n     * Chart context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_GRAPH: 7,\r\n    /**\r\n     * Pivot table context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_CROSSTAB: 8,\r\n    /**\r\n     * Publication context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PRINTTMPL: 9,\r\n    /**\r\n     * Bulk update context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_UPDATEALL: 10,\r\n    /**\r\n     * Reference selection context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_REFSELECT: 11,\r\n    /**\r\n     * Datamap selection context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_DATAMAPSELECT: 12,\r\n    /**\r\n     * Pre validation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PREVALIDATE: 13,\r\n    /**\r\n     * Post validation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_POSTVALIDATE: 14,\r\n    /**\r\n     * State transition context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_STATETRANSITION: 15,\r\n    /**\r\n     * Export context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_EXPORT: 16,\r\n    /**\r\n     * Import context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_IMPORT: 17,\r\n    /**\r\n     * Association context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_ASSOCIATE: 18,\r\n    /**\r\n     * Panel list context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PANELLIST: 19,\r\n    /**\r\n     * Action context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_ACTION: 20,\r\n    /**\r\n     * Agenda context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_AGENDA: 21,\r\n    /**\r\n     * Place map context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PLACEMAP: 22,\r\n    /**\r\n     * Foreign key (reference) type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ID: 0,\r\n    /**\r\n     * Integer type\r\n     * @constant {number}\r\n     */\r\n    TYPE_INT: 1,\r\n    /**\r\n     * Decimal type\r\n     * @constant {number}\r\n     */\r\n    TYPE_FLOAT: 2,\r\n    /**\r\n     * Short string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_STRING: 3,\r\n    /**\r\n     * Date type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DATE: 4,\r\n    /**\r\n     * Date and time type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DATETIME: 5,\r\n    /**\r\n     * Time type\r\n     * @constant {number}\r\n     */\r\n    TYPE_TIME: 6,\r\n    /**\r\n     * Simple enumeration type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ENUM: 7,\r\n    /**\r\n     * Boolean type\r\n     * @constant {number}\r\n     */\r\n    TYPE_BOOLEAN: 8,\r\n    /**\r\n     * Password type\r\n     * @constant {number}\r\n     */\r\n    TYPE_PASSWORD: 9,\r\n    /**\r\n     * URL type\r\n     * @constant {number}\r\n     */\r\n    TYPE_URL: 10,\r\n    /**\r\n     * HTML content type\r\n     * @constant {number}\r\n     */\r\n    TYPE_HTML: 11,\r\n    /**\r\n     * Email type\r\n     * @constant {number}\r\n     */\r\n    TYPE_EMAIL: 12,\r\n    /**\r\n     * Long string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_LONG_STRING: 13,\r\n    /**\r\n     * Multiple enumeration type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ENUM_MULTI: 14,\r\n    /**\r\n     * Validated string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_REGEXP: 15,\r\n    /**\r\n     * Document type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DOC: 17,\r\n    /**\r\n     * Decimal type\r\n     * @constant {number}\r\n     * @deprecated\r\n     */\r\n    TYPE_FLOAT_EMPTY: 18,\r\n    /**\r\n     * External file type\r\n     * @constant {number}\r\n     * @deprecated\r\n     */\r\n    TYPE_EXTFILE: 19,\r\n    /**\r\n     * Image type\r\n     * @constant {number}\r\n     */\r\n    TYPE_IMAGE: 20,\r\n    /**\r\n     * Notepad type\r\n     * @constant {number}\r\n     */\r\n    TYPE_NOTEPAD: 21,\r\n    /**\r\n     * Phone number type\r\n     * @constant {number}\r\n     */\r\n    TYPE_PHONENUM: 22,\r\n    /**\r\n     * RGB color type\r\n     * @constant {number}\r\n     */\r\n    TYPE_COLOR: 23,\r\n    /**\r\n     * Object type\r\n     * @constant {number}\r\n     */\r\n    TYPE_OBJECT: 24,\r\n    /**\r\n     * Geocoordinates type\r\n     * @constant {number}\r\n     */\r\n    TYPE_GEOCOORDS: 25,\r\n    /**\r\n     * Not visible\r\n     * @constant {number}\r\n     */\r\n    VIS_NOT: 0,\r\n    /**\r\n     * Hiiden (same as not visible)\r\n     * @constant {number}\r\n     */\r\n    VIS_HIDDEN: 0,\r\n    /**\r\n     * Visible on lists only\r\n     * @constant {number}\r\n     */\r\n    VIS_LIST: 1,\r\n    /**\r\n     * Visible on forms only\r\n     * @constant {number}\r\n     */\r\n    VIS_FORM: 2,\r\n    /**\r\n     * Visible on both lists and forms only\r\n     * @constant {number}\r\n     */\r\n    VIS_BOTH: 3,\r\n    /**\r\n     * No search\r\n     * @constant {number}\r\n     */\r\n    SEARCH_NONE: 0,\r\n    /**\r\n     * Simple search\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MONO: 1,\r\n    /**\r\n     * Multiple search (checkboxes)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MULTI_CHECK: 2,\r\n    /**\r\n     * Multiple search (listbox)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MULTI_LIST: 3,\r\n    /**\r\n     * Search by period (date/time)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_PERIOD: 4,\r\n    /**\r\n     * True\r\n     * @constant {string}\r\n     */\r\n    TRUE: '1',\r\n    /**\r\n     * False\r\n     * @constant {string}\r\n     */\r\n    FALSE: '0',\r\n    /**\r\n     * Fatal error level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_FATAL: 1,\r\n    /**\r\n     * Error level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_ERROR: 2,\r\n    /**\r\n     * Warning level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_WARNING: 3,\r\n    /**\r\n     * Image resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_IMAGE: 'IMG',\r\n    /**\r\n     * Icon resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_ICON: 'ICO',\r\n    /**\r\n     * Stylesheet resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_STYLESHEET: 'CSS',\r\n    /**\r\n     * Javascript resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_JAVASCRIPT: 'JS'\r\n};\r\n/**\r\n * Simplicite application session. Same as <code>new Session(parameter)</code>.\r\n * @param {object} params Parameters (see session class for details)\r\n * @return {Session} session\r\n */\r\nconst session = (params) => {\r\n    return new Session(params);\r\n};\r\n/**\r\n * Simplicite application session.\r\n * @param {object} params Parameters\r\n * @param {string} params.url Base URL of the Simplicite application\r\n * @param {string} params.scheme URL scheme (e.g. <code>'https'</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {string} params.host Hostname or IP address (e.g. <code>'myhost.mydomain.com'</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {number} params.port Port (e.g. <code>443</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {string} params.root Root context URL (e.g. <code>'/myapp'</code>) the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {boolean} [params.endpoint='api'] Endpoint (<code>'api'|'ui'|'uipublic'</code>)\r\n * @param {string} [params.username] Username (not needed for public endpoint)\r\n * @param {string} [params.password] Password (not needed for public endpoint)\r\n * @param {string} [params.authtoken] Auth token (if set, username and password are not needed; not needed for public endpoint)\r\n * @param {string} [params.ajaxkey] Ajax key (only usefull for usage from the generic UI)\r\n * @param {boolean} [params.debug=false] Debug mode?\r\n * @param {function} [params.debugHandler] Debug handler function\r\n * @param {function} [params.infoHandler] Info handler function\r\n * @param {function} [params.warningHandler] Warning handler function\r\n * @param {function} [params.errorHandler] Error handler function\r\n * @param {function} [params.logHandler] Log handler function\r\n * @class\r\n */\r\nclass Session {\r\n    /**\r\n     * Constructor\r\n     * @param params {object} Parameters\r\n     */\r\n    constructor(params) {\r\n        /**\r\n         * Constants\r\n         * @member\r\n         */\r\n        this.constants = constants;\r\n        /**\r\n         * Set username\r\n         * @param {string} usr Username\r\n         * @function\r\n         */\r\n        this.setUsername = (usr) => {\r\n            this.username = usr;\r\n        };\r\n        /**\r\n         * Set password\r\n         * @param {string} pwd Password\r\n         * @function\r\n         */\r\n        this.setPassword = (pwd) => {\r\n            this.password = pwd;\r\n        };\r\n        /**\r\n         * Set auth token\r\n         * @param {string} token Auth token\r\n         * @function\r\n         */\r\n        this.setAuthToken = (token) => {\r\n            this.authtoken = token;\r\n        };\r\n        /**\r\n         * Set auth token expiry date\r\n         * @param {Date} expiry Auth token expiry\r\n         * @function\r\n         */\r\n        this.setAuthTokenExpiryDate = (expiry) => {\r\n            this.authtokenexpiry = expiry;\r\n        };\r\n        /**\r\n         * Is the auth token expired?\r\n         * @return {boolean} true if the auth token is expired\r\n         * @function\r\n         */\r\n        this.isAuthTokenExpired = () => {\r\n            return this.authtokenexpiry ? new Date() > this.authtokenexpiry : false;\r\n        };\r\n        /**\r\n         * Set Ajax key\r\n         * @param {string} key Ajax key\r\n         * @function\r\n         */\r\n        this.setAjaxKey = (key) => {\r\n            this.ajaxkey = key;\r\n        };\r\n        /**\r\n         * Get business object cache key\r\n         * @param {string} name Business object name\r\n         * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n         * @return {object} Business object cache key\r\n         * @function\r\n         */\r\n        this.getBusinessObjectCacheKey = (name, instance) => {\r\n            return name + ':' + (instance || 'js_' + name);\r\n        };\r\n        /**\r\n         * Clears all data (credentials, objects, ...)\r\n         * @function\r\n         */\r\n        this.clear = () => {\r\n            this.username = undefined;\r\n            this.password = undefined;\r\n            this.authtoken = undefined;\r\n            this.authtokenexpiry = undefined;\r\n            this.sessionid = undefined;\r\n            this.grant = undefined;\r\n            this.appinfo = undefined;\r\n            this.sysinfo = undefined;\r\n            this.devinfo = undefined;\r\n            this.businessObjectCache = new Map();\r\n        };\r\n        /**\r\n         * Basic HTTP authorization header value\r\n         * @return {string} HTTP authorization header value\r\n         * @function\r\n         */\r\n        this.getBasicAuthHeader = () => {\r\n            return this.username && this.password\r\n                ? 'Basic ' + Buffer.from(this.username + ':' + this.password).toString('base64')\r\n                : undefined;\r\n        };\r\n        /**\r\n         * Get bearer token header value\r\n         * @return {string} Bearer token header value\r\n         * @function\r\n         */\r\n        this.getBearerTokenHeader = () => {\r\n            return this.authtoken\r\n                ? 'Bearer ' + this.authtoken\r\n                : undefined;\r\n        };\r\n        /**\r\n         * Get error object\r\n         * @param {(string|object)} err Error\r\n         * @param {string} err.message Error message\r\n         * @param {number} [status] Optional error status (defaults to 200)\r\n         * @param {string} [origin] Optional error origin\r\n         * @return {object} Error object\r\n         * @function\r\n         */\r\n        this.getError = (err, status, origin) => {\r\n            if (typeof err === 'string') { // plain text error\r\n                return { message: err, status: status || 200, origin };\r\n            }\r\n            else if (err.response) { // wrapped error\r\n                if (typeof err.response === 'string') {\r\n                    return { message: err.response, status: status || 200, origin };\r\n                }\r\n                else {\r\n                    if (origin)\r\n                        try {\r\n                            err.response.origin = origin;\r\n                        }\r\n                        catch (e) { /* ignore */ }\r\n                    return err.response;\r\n                }\r\n            }\r\n            else { // other cases\r\n                if (origin)\r\n                    try {\r\n                        err.origin = origin;\r\n                    }\r\n                    catch (e) { /* ignore */ }\r\n                return err;\r\n            }\r\n        };\r\n        /**\r\n         * Send request\r\n         * @param {string} path Path\r\n         * @param {object} [data] Data\r\n         * @param {function} [callback] Callback\r\n         * @param {function} [errorHandler] Error handler\r\n         * @function\r\n         */\r\n        this.sendRequest = (path, data, callback, errorHandler) => {\r\n            const origin = 'Session.req';\r\n            const m = data ? 'POST' : 'GET';\r\n            const h = {};\r\n            if (data)\r\n                h['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\r\n            let b = this.getBearerTokenHeader();\r\n            if (b) {\r\n                h['X-Simplicite-Authorization'] = b;\r\n            }\r\n            else {\r\n                b = this.getBasicAuthHeader();\r\n                if (b)\r\n                    h.Authorization = b;\r\n            }\r\n            let u = this.parameters.url + (path || '/');\r\n            if (this.ajaxkey)\r\n                u += (u.indexOf('?') >= 0 ? '&' : '?') + '_ajaxkey=' + encodeURIComponent(this.ajaxkey);\r\n            const d = data ? (typeof data === 'string' ? data : JSON.stringify(data)) : undefined;\r\n            this.debug(`[${origin}] ${m} ${u}${d ? ' with ' + d : ''}`);\r\n            fetch(u, {\r\n                method: m,\r\n                headers: h,\r\n                cache: 'no-cache',\r\n                mode: 'cors',\r\n                credentials: 'include',\r\n                body: d\r\n            }).then((res) => {\r\n                if (callback) {\r\n                    res.text().then((textData) => {\r\n                        callback.call(this, textData, res.status, res.headers);\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                const s = err.response && err.response.status ? err.response.status : undefined;\r\n                const e = err.response && err.response.data ? err.response.data : err;\r\n                if (errorHandler)\r\n                    errorHandler.call(this, this.getError(e, s, origin));\r\n                else\r\n                    throw e;\r\n            });\r\n        };\r\n        /**\r\n         * Parse response\r\n         * @param {object} res Response to parse\r\n         * @param {number} [status=200] HTTP status\r\n         * @return {object} Error object\r\n         * @function\r\n         */\r\n        this.parseResponse = (res, status) => {\r\n            try {\r\n                if (status !== 200)\r\n                    return { type: 'error', response: this.getError('HTTP status: ' + status, status) };\r\n                return typeof res === 'object' ? res : JSON.parse(res);\r\n            }\r\n            catch (e) {\r\n                return { type: 'error', response: this.getError('Parsing error: ' + e.message, status) };\r\n            }\r\n        };\r\n        /**\r\n         * Get health check (no need to be authenticated)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.full=false] Full health check?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the health data\r\n         * @function\r\n         */\r\n        this.getHealth = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getHealth';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.sendRequest(`${this.parameters.healthpath}&full=${!!opts.full}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${res}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, r);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Alias to getHealth\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.full=false] Full health check?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the health data\r\n         * @function\r\n         */\r\n        this.health = this.getHealth;\r\n        /**\r\n         * Login\r\n         * @param {object} [opts] Options\r\n         * @param {string} [opts.username] Username (exclusive with authentication token)\r\n         * @param {string} [opts.password] Password (required if username is set)\r\n         * @param {string} [opts.authtoken] Authentication token ((exclusive with username)\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the login result\r\n         * @function\r\n         */\r\n        this.login = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.login';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if ((opts.username || opts.login) && (opts.password || opts.pwd)) {\r\n                    this.clear();\r\n                    this.username = opts.username || opts.login;\r\n                    this.password = opts.password || opts.pwd;\r\n                }\r\n                else if (opts.authtoken || opts.authToken || opts.token) {\r\n                    this.clear();\r\n                    this.authtoken = opts.authtoken || opts.authToken || opts.token;\r\n                }\r\n                this.sendRequest(this.parameters.loginpath, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type || (r.error ? 'error' : 'login')}`);\r\n                    if (r.type === 'error' || r.error) {\r\n                        const err = this.getError(r.response ? r.response : r, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.sessionid = r.response ? r.response.id : r.sessionid;\r\n                        this.debug(`[${origin}] Session ID = ${this.sessionid}`);\r\n                        this.username = r.response ? r.response.login : r.login;\r\n                        if (this.username)\r\n                            this.debug(`[${origin}] Username = ${this.username}`);\r\n                        this.authtoken = r.response ? r.response.authtoken : r.authtoken;\r\n                        if (this.authtoken)\r\n                            this.debug(`[${origin}] Auth token = ${this.authtoken}`);\r\n                        try {\r\n                            const exp = new Date();\r\n                            exp.setTime(r.response ? r.response.authtokenexpiry : r.authtokenexpiry);\r\n                            this.authtokenexpiry = exp;\r\n                        }\r\n                        catch (e) {\r\n                            this.authtokenexpiry = undefined;\r\n                        }\r\n                        if (this.authtokenexpiry)\r\n                            this.debug(`[${origin}] Auth token expiry date = ${this.authtokenexpiry.toLocaleDateString()} ${this.authtokenexpiry.toLocaleTimeString()}`);\r\n                        // Minimal grant from session data\r\n                        this.grant = new Grant({\r\n                            login: this.username,\r\n                            userid: r.response ? r.response.userid : r.userid,\r\n                            firstname: r.response ? r.response.firstname : r.firstname,\r\n                            lastname: r.response ? r.response.lastname : r.lastname,\r\n                            email: r.response ? r.response.email : r.email\r\n                        });\r\n                        resolve.call(this, r.response || r);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Logout\r\n         * @param {function} callback Callback (called upon success)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the logout result\r\n         * @function\r\n         */\r\n        this.logout = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.logout';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.sendRequest(this.parameters.logoutpath, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type || (r.error ? 'error' : 'logout')}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response ? r.response : r, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.clear();\r\n                        resolve.call(this, r.response || r);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (err.status === 401) // Removes (expired or deleted) token if any\r\n                        this.authtoken = undefined;\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get grant (current user data)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.inlinePicture=false] Inline user picture?\r\n         * @param {boolean} [opts.includeTexts=false] Include texts?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<Grant>} A promise to the grant (also available as the <code>grant</code> member)\r\n         * @function\r\n         */\r\n        this.getGrant = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getGrant';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '&web=true'; // Required to be able to include texts\r\n                const pic = !!opts.inlinePicture || !!opts.picture; // naming flexibility\r\n                if (pic)\r\n                    p += '&inline_picture=true';\r\n                const txt = !!opts.includeTexts || !!opts.texts; // naming flexibility\r\n                if (txt)\r\n                    p += '&texts=true';\r\n                this.sendRequest(`${this.parameters.apppath}?action=getgrant${p}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.grant = new Grant(r.response); // Set as Grant\r\n                        if (pic)\r\n                            this.grant.picture = new Doc(this.grant.picture); // Set picture as Document\r\n                        if (txt)\r\n                            this.grant.texts = Object.assign(new Map(), this.grant.texts); // Set texts as Map\r\n                        resolve.call(this, this.grant);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Change password\r\n         * @param {string} pwd Password\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the change password result\r\n         * @function\r\n         */\r\n        this.changePassword = (pwd, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.changePassword';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.sendRequest(`${this.parameters.apppath}?action=setpassword&password=${encodeURIComponent(pwd)}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get application info\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the application info (also avialable as the <code>appinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getAppInfo = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getAppInfo';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.sendRequest(`${this.parameters.apppath}?action=getinfo`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.appinfo = r.response;\r\n                        resolve.call(this, this.appinfo);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get system info\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the system info (also avialable as the <code>sysinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getSysInfo = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getSysInfo';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.sendRequest(`${this.parameters.apppath}?action=sysinfo`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.sysinfo = r.response;\r\n                        resolve.call(this, this.sysinfo);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get development info\r\n         * @param {string} [module] Module name\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the develoment info (also avialable as the <code>devinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getDevInfo = (module, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getDevInfo';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                if (module)\r\n                    p += '&module=' + encodeURIComponent(module);\r\n                this.sendRequest(`${this.parameters.apppath}?action=devinfo${p}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        if (!module)\r\n                            this.devinfo = r.response;\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get news\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.inlineImages=false] Inline news images?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} A promise to the list of news (also avialable as the <code>news</code> member)\r\n         * @function\r\n         */\r\n        this.getNews = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.getNews';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                const img = !!opts.inlineImages || !!opts.images; // naming flexibility\r\n                if (img)\r\n                    p += '&inline_images=true';\r\n                this.sendRequest(`${this.parameters.apppath}?action=news${p}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.news = r.response;\r\n                        for (const n of this.news)\r\n                            n.image = new Doc(n.image); // Set image as document\r\n                        resolve.call(this, this.news);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Index search\r\n         * @param {string} query Index search query\r\n         * @param {string} [object] Object\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Add meta data for each result\r\n         * @param {number} [opts.context] Context\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} A promise to a list of index search records\r\n         * @function\r\n         */\r\n        this.indexSearch = (query, object, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'Session.indexSearch';\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                if (opts.metadata === true)\r\n                    p += '&_md=true';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                this.sendRequest(`${this.parameters.apppath}?action=indexsearch&request=${encodeURIComponent(query ? query : '')}${object ? '&object=' + encodeURIComponent(object) : ''}${p}`, undefined, (res, status) => {\r\n                    const r = this.parseResponse(res, status);\r\n                    this.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = this.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || this.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = this.getError(err, undefined, origin);\r\n                    if (!(opts.error || this.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get business object\r\n         * @param {string} name Business object name\r\n         * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n         * @return {BusinessObject} Business object\r\n         * @function\r\n         */\r\n        this.getBusinessObject = (name, instance) => {\r\n            const cacheKey = this.getBusinessObjectCacheKey(name, instance);\r\n            let obj = this.businessObjectCache[cacheKey];\r\n            if (!obj) {\r\n                obj = new BusinessObject(this, name, instance);\r\n                this.businessObjectCache[cacheKey] = obj;\r\n            }\r\n            return obj;\r\n        };\r\n        /**\r\n         * Get an external object\r\n         * @param {string} name External object name\r\n         * @function\r\n         */\r\n        this.getExternalObject = (name) => {\r\n            return new ExternalObject(this, name);\r\n        };\r\n        /**\r\n         * Get a resource URL\r\n         * @param {string} code Resource code\r\n         * @param {string} [type=IMG] Resource type (IMG=image (default), ICO=Icon, CSS=stylesheet, JS=Javascript, HTML=HTML)\r\n         * @param {string} [object] Object name (not required for global resources)\r\n         * @param {string} [objId] Object ID (not required for global resources)\r\n         * @function\r\n         */\r\n        this.getResourceURL = (code, type, object, objId) => {\r\n            return this.parameters.url + this.parameters.respath\r\n                + '?code=' + encodeURIComponent(code) + '&type=' + encodeURIComponent(type || 'IMG')\r\n                + (object ? '&object=' + encodeURIComponent(object) : '')\r\n                + (objId ? '&objid=' + encodeURIComponent(objId) : '')\r\n                + (this.authtoken ? '_x_simplicite_authorization_=' + encodeURIComponent(this.authtoken) : '');\r\n        };\r\n        params = params || {};\r\n        // Within the generic web UI if Simplicite is defined\r\n        const inUI = typeof globalThis.Simplicite !== 'undefined';\r\n        this.endpoint = params.endpoint || (inUI ? globalThis.Simplicite.ENDPOINT : \"api\" /* SessionParamEndpoint.API */);\r\n        this.log = params.logHandler || ((...args) => {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(args);\r\n        });\r\n        this.info = params.infoHandler || ((...args) => {\r\n            if (args && args.length === 1 && typeof args[0] === 'string')\r\n                // tslint:disable-next-line: no-console\r\n                console.info(`INFO - ${args[0]}`);\r\n            else\r\n                // tslint:disable-next-line: no-console\r\n                console.info('INFO', args);\r\n        });\r\n        this.warn = params.warningHandler || ((...args) => {\r\n            if (args && args.length === 1 && typeof args[0] === 'string')\r\n                // tslint:disable-next-line: no-console\r\n                console.info(`WARN - ${args[0]}`);\r\n            else\r\n                // tslint:disable-next-line: no-console\r\n                console.warn(`WARN${args && args.length > 0 && args[0].message ? ` - ${args[0].message}` : ''}`, args);\r\n        });\r\n        this.error = params.errorHandler || ((...args) => {\r\n            if (args && args.length === 1 && typeof args[0] === 'string')\r\n                // tslint:disable-next-line: no-console\r\n                console.info(`ERROR - ${args[0]}`);\r\n            else\r\n                // tslint:disable-next-line: no-console\r\n                console.error(`ERROR${args && args.length > 0 && args[0].message ? ` - ${args[0].message}` : ''}`, args);\r\n        });\r\n        this.debugMode = !!params.debug;\r\n        this.debug = params.debugHandler || ((...args) => {\r\n            if (this.debugMode) {\r\n                if (args && args.length === 1 && typeof args[0] === 'string')\r\n                    // tslint:disable-next-line: no-console\r\n                    console.info(`DEBUG - ${args[0]}`);\r\n                else\r\n                    // tslint:disable-next-line: no-console\r\n                    console.log('DEBUG', args);\r\n            }\r\n        });\r\n        const purl = params.url || (inUI && globalThis.Simplicite.URL) || (globalThis.window && globalThis.window.location.origin);\r\n        this.debug('[simplicite] URL parameter = ' + purl);\r\n        if (purl) {\r\n            try {\r\n                params.scheme = purl.replace(/:.*$/, '');\r\n                const u = purl.replace(new RegExp('^' + params.scheme + '://'), '').split(':');\r\n                if (u.length === 1) {\r\n                    params.host = u[0].replace(/\\/.*$/, '');\r\n                    params.port = params.scheme === 'http' ? 80 : 443;\r\n                    params.root = u[0].replace(new RegExp('^' + params.host + '/?'), '');\r\n                }\r\n                else {\r\n                    params.host = u[0];\r\n                    params.port = parseInt(u[1].replace(/\\/.*$/, ''), 10);\r\n                    if (isNaN(params.port))\r\n                        throw new Error('Incorrect port');\r\n                    params.root = u[1].replace(new RegExp('^' + params.port + '/?'), '');\r\n                }\r\n                if (params.root === '/')\r\n                    params.root = '';\r\n            }\r\n            catch (e) {\r\n                this.error('Unable to parse URL [' + purl + ']: ' + e.message);\r\n                return;\r\n            }\r\n        }\r\n        const scheme = params.scheme || (params.port === 443 ? 'https' : 'http');\r\n        if (scheme !== 'http' && scheme !== 'https') {\r\n            this.error('Incorrect scheme [' + params.scheme + ']');\r\n            return;\r\n        }\r\n        const host = params.host || 'localhost';\r\n        const port = params.port || 8080;\r\n        let root = params.root || '';\r\n        if (root === '/')\r\n            root = '';\r\n        let url = scheme + '://' + host;\r\n        if ((scheme === 'http' && port !== 80) || (scheme === 'https' && port !== 443))\r\n            url += ':' + port;\r\n        if (root !== '')\r\n            url += root.startsWith('/') ? root : '/' + root;\r\n        this.debug('[simplicite] Base URL = ' + url);\r\n        const ep = this.endpoint === 'uipublic' ? '' : '/' + this.endpoint;\r\n        this.parameters = {\r\n            scheme,\r\n            host,\r\n            port,\r\n            root,\r\n            url,\r\n            timeout: params.timeout || 30,\r\n            healthpath: (ep === '/ui' ? ep : '') + '/health?format=json',\r\n            loginpath: ep === '/api' ? '/api/login?format=json' : ep + '/json/app?action=session',\r\n            logoutpath: ep === '/api' ? '/api/logout?format=json' : ep + '/json/app?action=logout',\r\n            apppath: ep + '/json/app',\r\n            objpath: ep + '/json/obj',\r\n            extpath: ep + '/ext',\r\n            docpath: ep + '/raw/document',\r\n            respath: '/resource'\r\n        };\r\n        this.username = params.username || params.login; // naming flexibility\r\n        this.password = params.password || params.pwd; // naming flexibility\r\n        this.authtoken = params.authtoken || params.token; // naming flexibility\r\n        this.ajaxkey = params.ajaxkey || (inUI && globalThis.Simplicite.AJAX_KEY);\r\n        this.businessObjectCache = new Map();\r\n    }\r\n}\r\n/**\r\n * Document\r\n * @class\r\n */\r\nclass Doc {\r\n    /**\r\n     * Constructor\r\n     * @param value {object} Document value\r\n     */\r\n    constructor(value) {\r\n        /**\r\n         * Get the document ID\r\n         * @return {string} ID\r\n         * @function\r\n         */\r\n        this.getId = () => {\r\n            return this.id;\r\n        };\r\n        /**\r\n         * Get the document MIME type\r\n         * @return {string} MIME type\r\n         * @function\r\n         */\r\n        this.getMIMEType = () => {\r\n            return this.mime;\r\n        };\r\n        /**\r\n         * Alias to <code>getMIMEType</code>\r\n         * @return {string} MIME type\r\n         * @function\r\n         */\r\n        this.getMimeType = this.getMIMEType;\r\n        /**\r\n         * Set the document MIME type\r\n         * @param {string} mime MIME type\r\n         * @function\r\n         */\r\n        this.setMIMEType = (mime) => {\r\n            this.mime = mime;\r\n        };\r\n        /**\r\n         * Alias to <code>setMIMEType</code>\r\n         * @param {string} mime MIME type\r\n         * @function\r\n         */\r\n        this.setMimeType = this.setMIMEType;\r\n        /**\r\n         * Get the document file name\r\n         * @return {string} File name\r\n         * @function\r\n         */\r\n        this.getFilename = () => {\r\n            return this.filename;\r\n        };\r\n        /**\r\n         * Alias to <code>getFilename</code>\r\n         * @return {string} File name\r\n         * @function\r\n         */\r\n        this.getFileName = this.getFilename;\r\n        /**\r\n         * Set the document file name\r\n         * @param {string} filename File name\r\n         * @function\r\n         */\r\n        this.setFilename = (filename) => {\r\n            this.filename = filename;\r\n        };\r\n        /**\r\n         * Alias to <code>setFilename</code>\r\n         * @param {string} filename File name\r\n         * @function\r\n         */\r\n        this.setFileName = this.setFilename;\r\n        /**\r\n         * Get the document content (encoded in base 64)\r\n         * @return {string} Content\r\n         * @function\r\n         */\r\n        this.getContent = () => {\r\n            return this.content;\r\n        };\r\n        /**\r\n         * Get the document thumbnail (encoded in base 64)\r\n         * @return {string} Thumbnail\r\n         * @function\r\n         */\r\n        this.getThumbnail = () => {\r\n            return this.thumbnail;\r\n        };\r\n        /**\r\n         * Get the document content as an array buffer\r\n         * @return {ArrayBuffer} Content as an array buffer\r\n         * @function\r\n         */\r\n        this.getContentAsArrayBuffer = () => {\r\n            return this.getBuffer(this.content).buffer;\r\n        };\r\n        /**\r\n         * Get the document thumbnail as an array buffer\r\n         * @return {ArrayBuffer} Thumbnail as an array buffer\r\n         * @function\r\n         */\r\n        this.getThumbnailAsArrayBuffer = () => {\r\n            return this.getBuffer(this.thumbnail || '').buffer;\r\n        };\r\n        /**\r\n         * Get the document content as a text\r\n         * @return {string} Content as plain text\r\n         * @function\r\n         */\r\n        this.getContentAsText = () => {\r\n            return this.getBuffer(this.content).toString('utf-8');\r\n        };\r\n        /**\r\n         * Set the document content\r\n         * @param {string} content Content (encoded in base 64)\r\n         * @function\r\n         */\r\n        this.setContent = (content) => {\r\n            this.content = content;\r\n        };\r\n        /**\r\n         * Set the document content from plain text string\r\n         * @param {string} content Content as plain text string\r\n         * @function\r\n         */\r\n        this.setContentFromText = (content) => {\r\n            this.content = Buffer.from(content, 'utf-8').toString('base64');\r\n        };\r\n        /**\r\n         * Get the document data URL\r\n         * @param {boolean} [thumbnail=false] Thumbnail? If thumbnail does not exists the content is used.\r\n         * @return {string} Data URL or nothing if content is empty\r\n         */\r\n        this.getDataURL = (thumbnail) => {\r\n            if (this.content)\r\n                return 'data:' + this.mime + ';base64,' + (thumbnail && this.thumbnail ? this.thumbnail : this.content);\r\n        };\r\n        /**\r\n         * Get the document as a simple value\r\n         * @return {object} Value\r\n         */\r\n        this.getValue = () => {\r\n            return JSON.parse(JSON.stringify(this)); // Strips all functions\r\n        };\r\n        Object.assign(this, value);\r\n    }\r\n    /**\r\n     * Get the document content as a buffer\r\n     * @param {any} data Content data\r\n     * @return {buffer} Content data as buffer\r\n     * @private\r\n     */\r\n    getBuffer(data) {\r\n        return Buffer.from(data, 'base64');\r\n    }\r\n}\r\n/**\r\n * Grant (user).\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>data</code> variable got using <code>getGrant</code></span>.\r\n * @class\r\n */\r\nclass Grant {\r\n    /**\r\n     * Constructor\r\n     * @param grant {object} Grant object\r\n     */\r\n    constructor(grant) {\r\n        /**\r\n         * Get user ID\r\n         * @return {string} User ID\r\n         * @function\r\n         */\r\n        this.getUserId = () => {\r\n            return this.userid;\r\n        };\r\n        /**\r\n         * Get username\r\n         * @return {string} Username\r\n         * @function\r\n         */\r\n        this.getUsername = () => {\r\n            return this.login;\r\n        };\r\n        /**\r\n         * Alias to <code>getUsername</code>\r\n         * @return {string} Login\r\n         * @function\r\n         */\r\n        this.getLogin = this.getUsername; // Naming flexibility\r\n        /**\r\n         * Get user language\r\n         * @return {string} User language\r\n         * @function\r\n         */\r\n        this.getLang = () => {\r\n            return this.lang;\r\n        };\r\n        /**\r\n         * Get email address\r\n         * @return {string} Email address\r\n         * @function\r\n         */\r\n        this.getEmail = () => {\r\n            return this.email;\r\n        };\r\n        /**\r\n         * Get first name\r\n         * @return {string} First name\r\n         * @function\r\n         */\r\n        this.getFirstname = () => {\r\n            return this.firstname;\r\n        };\r\n        /**\r\n         * Alias to <code>getFirstname</code>\r\n         * @return {string} First name\r\n         * @function\r\n         */\r\n        this.getFirstName = this.getFirstname; // Naming flexibility\r\n        /**\r\n         * Get last name\r\n         * @return {string} Last name\r\n         * @function\r\n         */\r\n        this.getLastname = () => {\r\n            return this.lastname;\r\n        };\r\n        /**\r\n         * Alias to <code>getLastname</code>\r\n         * @return {string} Last name\r\n         * @function\r\n         */\r\n        this.getLastName = this.getLastname; // Naming flexibility\r\n        /**\r\n         * Get picture data URL\r\n         * @return {Doc} Picture data URL\r\n         * @function\r\n         */\r\n        this.getPictureURL = () => {\r\n            if (this.picture)\r\n                return 'data:' + this.picture.mime + ';base64,' + this.picture.content;\r\n        };\r\n        /**\r\n         * Has responsibility\r\n         * @param {string} group Group name\r\n         * @return {boolean} True if user has a responsibility on the specified group\r\n         * @function\r\n         */\r\n        this.hasResponsibility = (group) => {\r\n            return this.responsibilities && this.responsibilities.indexOf(group) !== -1;\r\n        };\r\n        /**\r\n         * Get text value\r\n         * @param {string} code Text code\r\n         * @return {string} Text value\r\n         */\r\n        this.T = (code) => {\r\n            return this.texts ? this.texts[code] || '' : '';\r\n        };\r\n        Object.assign(this, grant);\r\n    }\r\n}\r\n/**\r\n * Business object meta data.\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>metadata</code> variable of your <code>BusinessObject</code> instances</span>.\r\n * @class\r\n */\r\nclass BusinessObjectMetadata {\r\n    /**\r\n     * Constructor\r\n     * @param {string} name Business object name\r\n     * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n     */\r\n    constructor(name, instance) {\r\n        this.name = name;\r\n        this.instance = instance;\r\n        this.rowidfield = constants.DEFAULT_ROW_ID_NAME;\r\n        this.label = name;\r\n        this.help = '';\r\n        this.fields = new Array();\r\n    }\r\n}\r\n/**\r\n * Business object.\r\n * <br/><span style=\"color: red;\">ou <strong>should never</strong> instanciate this class directly\r\n * but rather call <code>getBusinessObject</code> to get a cached instance</span>.\r\n * @class\r\n */\r\nclass BusinessObject {\r\n    /**\r\n     * Constructor\r\n     * @param {Session} ses Session\r\n     * @param {string} name Business object name\r\n     * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n     */\r\n    constructor(ses, name, instance) {\r\n        /**\r\n         * Get meta data\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.context] Context\r\n         * @param {string} [opts.contextParam] Context parameter\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<BusinessObjectMetadata>} A promise to the object'ts meta data (also available as the <code>metadata</code> member)\r\n         * @function\r\n         */\r\n        this.getMetaData = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.getMetaData';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                if (opts.contextParam)\r\n                    p += '&contextparam=' + encodeURIComponent(opts.contextParam);\r\n                ses.sendRequest(this.path + '&action=metadata' + p, undefined, (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.metadata = r.response;\r\n                        resolve.call(this, this.metadata);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get meta data (alias to getMetaData)\r\n         * @function\r\n         */\r\n        this.getMetadata = this.getMetaData;\r\n        /**\r\n         * Get name\r\n         * @return {string} Name\r\n         * @function\r\n         */\r\n        this.getName = () => {\r\n            return this.metadata.name;\r\n        };\r\n        /**\r\n         * Get instance name\r\n         * @return {string} Instance name\r\n         * @function\r\n         */\r\n        this.getInstance = () => {\r\n            return this.metadata.instance;\r\n        };\r\n        /**\r\n         * Get display label\r\n         * @return {string} Display label\r\n         * @function\r\n         */\r\n        this.getLabel = () => {\r\n            return this.metadata.label;\r\n        };\r\n        /**\r\n         * Get help\r\n         * @return {string} Help\r\n         * @function\r\n         */\r\n        this.getHelp = () => {\r\n            return this.metadata.help;\r\n        };\r\n        /**\r\n         * Get all fields definitions\r\n         * @return {array} Array of field definitions\r\n         * @function\r\n         */\r\n        this.getFields = () => {\r\n            return this.metadata.fields;\r\n        };\r\n        /**\r\n         * Get a field definition\r\n         * @param {string} fieldName Field name\r\n         * @return {object} Field definition\r\n         * @function\r\n         */\r\n        this.getField = (fieldName) => {\r\n            const fs = this.getFields();\r\n            let n = 0;\r\n            while (n < fs.length && fs[n].name !== fieldName)\r\n                n++;\r\n            if (n < fs.length)\r\n                return fs[n];\r\n        };\r\n        /**\r\n         * Get row ID field name\r\n         * @return {string} Row ID field name\r\n         * @function\r\n         */\r\n        this.getRowIdFieldName = () => {\r\n            return this.metadata.rowidfield;\r\n        };\r\n        /**\r\n         * Get row ID field definition\r\n         * @return {object} Row ID field definition\r\n         * @function\r\n         */\r\n        this.getRowIdField = () => {\r\n            return this.getField(this.getRowIdFieldName());\r\n        };\r\n        /**\r\n         * Get links\r\n         * @return {array} Array of links\r\n         * @function\r\n         */\r\n        this.getLinks = () => {\r\n            return this.metadata.links;\r\n        };\r\n        /**\r\n         * Get field type\r\n         * @param {(string|object)} field Field name or definition\r\n         * @return {string} Type (one of <code>constants.TYPE_*</code>)\r\n         * @function\r\n         */\r\n        this.getFieldType = (field) => {\r\n            if (typeof field === 'string')\r\n                field = this.getField(field);\r\n            if (field)\r\n                return field.type;\r\n        };\r\n        /**\r\n         * Get field label\r\n         * @param {(string|object)} field Field name or definition\r\n         * @return {string} Field label\r\n         * @function\r\n         */\r\n        this.getFieldLabel = (field) => {\r\n            if (typeof field === 'string')\r\n                field = this.getField(field);\r\n            if (field)\r\n                return field.label;\r\n        };\r\n        /**\r\n         * Get value of field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string|Doc} Value\r\n         * @function\r\n         */\r\n        this.getFieldValue = (field, item) => {\r\n            if (!item)\r\n                item = this.item;\r\n            if (field && item) {\r\n                const val = item[typeof field === 'string' ? field : field.name];\r\n                if (val && val.mime) // Document?\r\n                    return new Doc(val);\r\n                else\r\n                    return val;\r\n            }\r\n        };\r\n        /**\r\n         * Get the list value of a list of values field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string} List value\r\n         * @function\r\n         */\r\n        this.getFieldListValue = (field, item) => {\r\n            if (typeof field === 'string')\r\n                field = this.getField(field);\r\n            const val = this.getFieldValue(field, item);\r\n            return field && field.listOfValues ? this.getListValue(field.listOfValues, val) : val;\r\n        };\r\n        /**\r\n         * Get the data URL of an inlined document/image field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string} Document/image field data URL (or nothing if the field is not of document/image type or if it is not inlined or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDataURL = (field, item) => {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.name;\r\n            const val = this.getFieldValue(field, item);\r\n            if (val && val.mime) // Inlined\r\n                return 'data:' + val.mime + ';base64,' + (val.content || val.thumbnail);\r\n        };\r\n        /**\r\n         * Get the field's value as document/image for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string|Doc} Document/image (or nothing if the field is not of document/image type or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDocument = (field, item) => {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.input || field.name;\r\n            const val = this.getFieldValue(field, item);\r\n            if (val && val.mime)\r\n                return new Doc(val);\r\n            else\r\n                return val;\r\n        };\r\n        /**\r\n         * Get the URL of a document/image field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {boolean} [thumbnail=false] Thumbnail?\r\n         * @return {string} Document/image field URL (or nothing if the field is not of document/image type or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDocumentURL = (field, item, thumbnail) => {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.input || field.name;\r\n            let val = this.getFieldValue(field, item);\r\n            if (val && val.mime) // Inlined\r\n                val = val.id;\r\n            if (val)\r\n                return this.session.parameters.url + this.session.parameters.docpath\r\n                    + '?object=' + encodeURIComponent(this.metadata.name)\r\n                    + '&inst=' + encodeURIComponent(this.metadata.instance)\r\n                    + '&field=' + encodeURIComponent(field)\r\n                    + '&row_id=' + encodeURIComponent(this.getRowId(item))\r\n                    + '&doc_id=' + encodeURIComponent(val)\r\n                    + (thumbnail ? '&thumbnail=true' : '')\r\n                    + (this.session.authtoken ? '&_x_simplicite_authorization_=' + encodeURIComponent(this.session.authtoken) : '');\r\n        };\r\n        /**\r\n         * Get list value for code\r\n         * @param {array} list List of values\r\n         * @param {string} code Code\r\n         * @return {string} Value\r\n         * @function\r\n         */\r\n        this.getListValue = (list, code) => {\r\n            if (list) {\r\n                for (const l of list) {\r\n                    if (l.code === code)\r\n                        return l.value;\r\n                }\r\n            }\r\n            return code;\r\n        };\r\n        /**\r\n         * Set value of field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {(string|object)} value Value\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @function\r\n         */\r\n        this.setFieldValue = (field, value, item) => {\r\n            if (!item)\r\n                item = this.item;\r\n            if (field && item) {\r\n                item[typeof field === 'string' ? field : field.name] = value instanceof Doc ? value.getValue() : value;\r\n            }\r\n        };\r\n        /**\r\n         * Is the field the row ID field?\r\n         * @param {object} field Field definition\r\n         * @return {boolean} True if the field is the row ID field\r\n         * @function\r\n         */\r\n        this.isRowIdField = (field) => {\r\n            return !field.ref && field.name === this.metadata.rowidfield;\r\n        };\r\n        /**\r\n         * Is the field a timestamp field?\r\n         * @param {object} field Field definition\r\n         * @return {boolean} True if the field is a timestamp field\r\n         * @function\r\n         */\r\n        this.isTimestampField = (field) => {\r\n            const n = field.name;\r\n            return !field.ref && (n === 'created_by' || n === 'created_dt' || n === 'updated_by' || n === 'updated_dt');\r\n        };\r\n        /**\r\n         * Get current filters\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.context] Context\r\n         * @param {boolean} [opts.reset] Reset filters?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the object's filters (also available as the <code>filters</code> member)\r\n         * @function\r\n         */\r\n        this.getFilters = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.getFilters';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                if (opts.reset)\r\n                    p += '&reset=' + !!opts.reset;\r\n                ses.sendRequest(this.path + '&action=filters' + p, undefined, (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.filters = r.response;\r\n                        resolve.call(this, this.filters);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Build options parameters\r\n         * @param {object} options Options\r\n         * @return {string} Option parameters\r\n         * @private\r\n         */\r\n        this.getReqOptions = (options) => {\r\n            let opts = '';\r\n            if (options.context)\r\n                opts += '&context=' + encodeURIComponent(options.context);\r\n            const id = options.inlineDocs || options.inlineDocuments || options.inlineImages; // Naming flexibility\r\n            if (id)\r\n                opts += '&inline_documents=' + encodeURIComponent(id.join ? id.join(',') : id);\r\n            const it = options.inlineThumbs || options.inlineThumbnails; // Naming flexibility\r\n            if (it)\r\n                opts += '&inline_thumbnails=' + encodeURIComponent(it.join ? it.join(',') : it);\r\n            const io = options.inlineObjs || options.inlineObjects; // Naming flexibility\r\n            if (io)\r\n                opts += '&inline_objects=' + encodeURIComponent(io.join ? io.join(',') : io);\r\n            return opts;\r\n        };\r\n        /**\r\n         * Convert usual wildcards to filters wildcards\r\n         * @param {object} filter Filter\r\n         * @return {string} Filter with wildcards converted\r\n         * @private\r\n         */\r\n        this.convertFilterWildCards = (filter) => {\r\n            return typeof filter === 'string' ? filter.replace(new RegExp('\\\\*', 'g'), '%').replace(new RegExp('\\\\?', 'g'), '_') : filter;\r\n        };\r\n        /**\r\n         * Build request parameters\r\n         * @param {object} data Data\r\n         * @param {boolean} [filters] Filters? Used to convert wildcards if needed\r\n         * @return {string} Request parameters\r\n         * @private\r\n         */\r\n        this.getReqParams = (data, filters) => {\r\n            let p = '';\r\n            if (!data)\r\n                return p;\r\n            for (const i of Object.entries(data)) {\r\n                const k = i[0];\r\n                const d = i[1] || '';\r\n                if (d.name && d.content) { // Document ?\r\n                    if (d.content.startsWith('data:')) // Flexibility = extract content fron data URL\r\n                        d.content = d.content.replace(/data:.*;base64,/, '');\r\n                    p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent('id|' + (d.id ? d.id : '0') + '|name|' + d.name + '|content|' + d.content);\r\n                }\r\n                else if (d.object && d.row_id) { // Object ?\r\n                    p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent('object|' + d.object + '|row_id|' + d.row_id);\r\n                }\r\n                else if (d.sort) { // Array ?\r\n                    for (const dd of d)\r\n                        p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent(filters ? this.convertFilterWildCards(dd) : dd);\r\n                }\r\n                else {\r\n                    p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent(filters ? this.convertFilterWildCards(d) : d);\r\n                }\r\n            }\r\n            return p;\r\n        };\r\n        /**\r\n         * Get count\r\n         * @param {object} [filters] Filters (defaults to current filters)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the count\r\n         * @function\r\n         */\r\n        this.getCount = (filters, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.getCount';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                this.filters = filters || {};\r\n                ses.sendRequest(`${this.path}&action=count`, this.getReqParams(this.filters, true), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.count = r.response.count;\r\n                        this.page = r.response.page >= 0 ? r.response.page + 1 : undefined;\r\n                        this.maxpage = r.response.maxpage >= 0 ? r.response.maxpage + 1 : undefined;\r\n                        this.list = [];\r\n                        resolve.call(this, this.count);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Search\r\n         * @param {object} [filters] Filters (defaults to current filters)\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.page] Page number, a non paginated list is returned if not set\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {boolean} [opts.visible] Return only visible fields?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} Promise to a list of records (also available as the <code>list</code> member)\r\n         * @function\r\n         */\r\n        this.search = (filters, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.search';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = this.getReqOptions(opts);\r\n                if (opts.page > 0)\r\n                    p += '&page=' + (opts.page - 1);\r\n                if (opts.metadata === true)\r\n                    p += '&_md=true';\r\n                if (opts.visible === true)\r\n                    p += '&_visible=true';\r\n                this.filters = filters || {};\r\n                ses.sendRequest(this.path + '&action=search' + p, this.getReqParams(this.filters, true), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        if (res.meta)\r\n                            this.metadata = r.response.meta;\r\n                        this.count = r.response.count;\r\n                        this.page = r.response.page >= 0 ? r.response.page + 1 : undefined;\r\n                        this.maxpage = r.response.maxpage >= 0 ? r.response.maxpage + 1 : undefined;\r\n                        this.list = r.response.list;\r\n                        resolve.call(this, this.list);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get\r\n         * @param {string} [rowId] Row ID (defaults to current item's row ID)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {string[]} [opts.fields] List of field names to return, all fields are returned by default\r\n         * @param {string} [opts.treeview] Return the named tree view structure\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.get = (rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.get';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = this.getReqOptions(opts);\r\n                const tv = opts.treeView;\r\n                if (tv)\r\n                    p += '&treeview=' + encodeURIComponent(tv);\r\n                if (opts.fields) {\r\n                    for (const f of opts.fields.length)\r\n                        p += '&fields=' + encodeURIComponent(f.replace('.', '__'));\r\n                }\r\n                if (opts.metadata)\r\n                    p += '&_md=true';\r\n                if (opts.social)\r\n                    p += '&_social=true';\r\n                ses.sendRequest(this.path + '&action=get&' + this.metadata.rowidfield + '=' + encodeURIComponent(rowId || this.getRowId()) + p, undefined, (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[simplicite.BusinessObject.get] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        if (r.response.meta)\r\n                            this.metadata = r.response.meta;\r\n                        if (r.response.data)\r\n                            this.item = tv ? r.response.data.item : r.response.data;\r\n                        else\r\n                            this.item = tv ? r.response.item : r.response;\r\n                        resolve.call(this, tv ? r.response : this.item);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get for create\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to create (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForCreate = (opts) => __awaiter(this, void 0, void 0, function* () {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_CREATE;\r\n            return this.get(constants.DEFAULT_ROW_ID, opts);\r\n        });\r\n        /**\r\n         * Get for update\r\n         * @param {string} [rowId] Row ID (defaults to current item's row ID)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to update (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForUpdate = (rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_UPDATE;\r\n            return this.get(rowId || this.getRowId(), opts);\r\n        });\r\n        /**\r\n         * Get for copy\r\n         * @param {string} [rowId] Row ID to copy (defaults to current item's row ID)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to create (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForCopy = (rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_COPY;\r\n            return this.get(rowId || this.getRowId(), opts);\r\n        });\r\n        /**\r\n         * Get for delete\r\n         * @param {string} [rowId] Row ID (defaults to current item's row ID)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to delete (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForDelete = (rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_DELETE;\r\n            return this.get(rowId || this.getRowId(), opts);\r\n        });\r\n        /**\r\n         * Get specified or current item's row ID value\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string} Item's row ID value\r\n         * @function\r\n         */\r\n        this.getRowId = (item) => {\r\n            item = item || this.item;\r\n            if (item)\r\n                return item[this.getRowIdFieldName()];\r\n        };\r\n        /**\r\n         * Populate\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the populated record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.populate = (item, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.populate';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (item)\r\n                    this.item = item;\r\n                const p = this.getReqOptions(opts);\r\n                ses.sendRequest(this.path + '&action=populate?' + p, this.getReqParams(this.item), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve.call(this, this.item);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get the linked list for a list of values field and its specified value(s)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {(string|object)} linkedField Linked field name or definition\r\n         * @param {string|boolean} [code] List of values code(s) (if multiple codes use ; as separator), defaults to current field value if empty, means \"all\" if true\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the populated record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getFieldLinkedList = (field, linkedField, code, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.getFieldLinkedList';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (typeof field !== 'string')\r\n                    field = field.fullinput || field.name;\r\n                if (typeof linkedField !== 'string')\r\n                    linkedField = linkedField.fullinput || linkedField.name;\r\n                let all = false;\r\n                if (code === true) {\r\n                    all = true;\r\n                    code = undefined;\r\n                }\r\n                else if (typeof code === 'undefined') {\r\n                    code = this.getFieldValue(field);\r\n                }\r\n                ses.sendRequest(`${this.path}&action=getlinkedlist`, this.getReqParams({ origin: field, input: linkedField, code, all }), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.item = r.response.result ? r.response.result : r.response;\r\n                        resolve.call(this, this.item);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Save (create or update depending on item row ID value)\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the saved record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.save = (item, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            if (item)\r\n                this.item = item;\r\n            const rowId = this.item[this.metadata.rowidfield];\r\n            if (!rowId || rowId === constants.DEFAULT_ROW_ID)\r\n                return this.create(item, opts);\r\n            else\r\n                return this.update(item, opts);\r\n        });\r\n        /**\r\n         * Create (create or update)\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the created record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.create = (item, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.create';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (item)\r\n                    this.item = item;\r\n                this.item.row_id = constants.DEFAULT_ROW_ID;\r\n                const p = this.getReqOptions(opts);\r\n                ses.sendRequest(`${this.path}&action=create${p}`, this.getReqParams(this.item), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve.call(this, this.item);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Update\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the updated record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.update = (item, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.update';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (item)\r\n                    this.item = item;\r\n                const p = this.getReqOptions(opts);\r\n                ses.sendRequest(this.path + '&action=update' + p, this.getReqParams(this.item), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve.call(this, this.item);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Delete\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise (the <code>item</code> member is emptied)\r\n         * @function\r\n         */\r\n        this.del = (item, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.del';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (item)\r\n                    this.item = item;\r\n                ses.sendRequest(this.path + '&action=delete&' + this.metadata.rowidfield + '=' + encodeURIComponent(this.item[this.metadata.rowidfield]), undefined, (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        this.item = undefined;\r\n                        delete r.response.undoredo;\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Invoke a custom action\r\n         * @param {string} action Action name\r\n         * @param {string} [rowId] Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.parameters] Optional action parameters as key/value pairs\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<string|object>} A promise to the action result\r\n         * @function\r\n         */\r\n        this.action = (action, rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = `BusinessObject.action(${action})`;\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                ses.sendRequest(this.path + '&action=' + encodeURIComponent(action) + (rowId ? '&' + this.getRowIdFieldName() + '=' + encodeURIComponent(rowId) : ''), this.getReqParams(opts.parameters), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        const result = r.response.result;\r\n                        resolve.call(this, result);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Build a pivot table\r\n         * @param {string} ctb Pivot table name\r\n         * @param {object} [opts] Options\r\n         * @param {object} [opts.filters] Filters, by default current filters are used\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the pivot table data (also avialable as the <code>crosstabdata</code> member)\r\n         * @function\r\n         */\r\n        this.crosstab = (ctb, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = `BusinessObject.crosstab(${ctb})`;\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (opts.filters)\r\n                    this.filters = opts.filters;\r\n                ses.sendRequest(this.path + '&action=crosstab&crosstab=' + encodeURIComponent(ctb), this.getReqParams(this.filters, true), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Build a custom publication\r\n         * @param {string} prt Publication name\r\n         * @param {string} [rowId] Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<Doc>} A promise to the document of the publication\r\n         * @function\r\n         */\r\n        this.print = (prt, rowId, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = `BusinessObject.print(${prt})`;\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (opts.filters)\r\n                    this.filters = opts.filters;\r\n                let p = '';\r\n                if (opts.all)\r\n                    p += '&all=' + !!opts.all;\r\n                if (opts.mailing)\r\n                    p += '&mailing=' + !!opts.mailing;\r\n                ses.sendRequest(this.path + '&action=print&printtemplate=' + encodeURIComponent(prt) + (rowId ? '&' + this.getRowIdFieldName() + '=' + encodeURIComponent(rowId) : '') + p, undefined, (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, new Doc(r.response));\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get placem map data\r\n         * @param {string} pcm Place map name\r\n         * @param {string} [filters] Filters\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<any>} A promise to the place map data\r\n         * @function\r\n         */\r\n        this.placemap = (pcm, filters, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = `BusinessObject.placemap(${pcm})`;\r\n            const ses = this.session;\r\n            this.filters = filters || {};\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                if (opts.filters)\r\n                    this.filters = opts.filters;\r\n                ses.sendRequest(this.path + '&action=placemap&placemap=' + encodeURIComponent(pcm), this.getReqParams(this.filters, true), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        resolve.call(this, r.response);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Set an object parameter\r\n         * @param {string} param Parameter name\r\n         * @param {string} value Parameter value\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise\r\n         * @function\r\n         */\r\n        this.setParameter = (param, value, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.setParameter';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                const p = { name: param };\r\n                if (value)\r\n                    p.value = value;\r\n                ses.sendRequest(this.path + '&action=setparameter', this.getReqParams(p), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        const result = r.response.result;\r\n                        resolve.call(this, result);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get an object parameter\r\n         * @param {string} param Parameter name\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the parameter value\r\n         * @function\r\n         */\r\n        this.getParameter = (param, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'BusinessObject.getParameter';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                const p = { name: param };\r\n                ses.sendRequest(this.path + '&action=getparameter', this.getReqParams(p), (res, status) => {\r\n                    const r = ses.parseResponse(res, status);\r\n                    ses.debug(`[${origin}] HTTP status = ${status}, response type = ${r.type}`);\r\n                    if (r.type === 'error') {\r\n                        const err = ses.getError(r.response, undefined, origin);\r\n                        if (!(opts.error || ses.error).call(this, err))\r\n                            reject.call(this, err);\r\n                    }\r\n                    else {\r\n                        const result = r.response.result;\r\n                        resolve.call(this, result);\r\n                    }\r\n                }, (err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Get an object resource URL\r\n         * @param {string} code Resource code\r\n         * @param {string} [type=IMG] Resource type (IMG=image (default), ICO=Icon, CSS=stylesheet, JS=Javascript, HTML=HTML)\r\n         * @return {string} Object resource URL\r\n         * @function\r\n         */\r\n        this.getResourceURL = (code, type) => {\r\n            return this.session.getResourceURL(code, type, this.metadata.name, this.metadata.id);\r\n        };\r\n        this.session = ses;\r\n        const inst = instance || 'api_' + name;\r\n        this.metadata = new BusinessObjectMetadata(name, inst);\r\n        this.cacheKey = this.session.getBusinessObjectCacheKey(name, inst);\r\n        this.path = this.session.parameters.objpath + '?object=' + encodeURIComponent(name) + '&inst=' + encodeURIComponent(inst);\r\n        this.item = {};\r\n        this.filters = {};\r\n        this.list = [];\r\n    }\r\n}\r\n/**\r\n * External object meta data.\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>metadata</code> variable of your <code>ExternalObject</code> instances</span>.\r\n * @class\r\n */\r\nclass ExternalObjectMetadata {\r\n    /**\r\n     * Constructor\r\n     * @param {string} name External object name\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n}\r\n/**\r\n * External object.\r\n * <br/><span style=\"color: red;\">ou <strong>should never</strong> instanciate this class directly\r\n * but rather call <code>getExternalObject</code></span>.\r\n * @class\r\n */\r\nclass ExternalObject {\r\n    /**\r\n     * Constructor\r\n     * @param {Session} ses Session\r\n     * @param {string} name Business object name\r\n     */\r\n    constructor(ses, name) {\r\n        /**\r\n         * Get name\r\n         * @return {string} Name\r\n         * @function\r\n         */\r\n        this.getName = () => {\r\n            return this.metadata.name;\r\n        };\r\n        /**\r\n         * Build URL-encoded parameters\r\n         * @param {object} params URL parameters as key/value pairs\r\n         * @return {string} URL-encoded parameters\r\n         * @function\r\n         */\r\n        this.callParams = (params) => {\r\n            let p = '';\r\n            if (!params)\r\n                return p;\r\n            for (const i of Object.entries(params)) {\r\n                const k = i[0];\r\n                const v = i[1] || '';\r\n                if (v.sort) { // Array ?\r\n                    for (const vv of v)\r\n                        p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent(vv);\r\n                }\r\n                else {\r\n                    p += (p !== '' ? '&' : '') + k + '=' + encodeURIComponent(v);\r\n                }\r\n            }\r\n            return p;\r\n        };\r\n        /**\r\n         * Call an external object\r\n         * @param {object} [params] Optional URL parameters\r\n         * @param {object} [data] Optional data (for 'POST' and 'PUT' methods only)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @param {string} [opts.path] Absolute or relative path (e.g. absolute '/my/mapped/upath' or relative 'my/additional/path')\r\n         * @param {object} [opts.method] Optional method 'GET', 'POST', 'PUT' or 'DELETE' (defaults to 'GET' if data is not set or 'POST' if data is set)\r\n         * @param {function} [opts.contentType] Optional data content type (for 'POST' and 'PUT' methods only)\r\n         * @return {promise<object>} Promise to the external object content\r\n         * @function\r\n         */\r\n        this.call = (params, data, opts) => __awaiter(this, void 0, void 0, function* () {\r\n            const origin = 'ExternalObject.call';\r\n            const ses = this.session;\r\n            opts = opts || {};\r\n            return new Promise((resolve, reject) => {\r\n                let p = '';\r\n                if (params)\r\n                    p = '?' + this.callParams(params);\r\n                const m = opts.method ? opts.method.toUpperCase() : (data ? 'POST' : 'GET');\r\n                const h = {};\r\n                if (opts.contentType) {\r\n                    h['Content-Type'] = opts.contentType;\r\n                }\r\n                else if (data) { // Try to guess type...\r\n                    h['Content-Type'] = typeof data === 'string' ? 'application/x-www-form-urlencoded' : 'application/json';\r\n                }\r\n                let b = ses.getBearerTokenHeader();\r\n                if (b) {\r\n                    h['X-Simplicite-Authorization'] = b;\r\n                }\r\n                else {\r\n                    b = ses.getBasicAuthHeader();\r\n                    if (b)\r\n                        h.Authorization = b;\r\n                }\r\n                const u = ses.parameters.url + (opts.path && opts.path.startsWith('/') ? opts.path : this.path + (opts.path ? '/' + opts.path : '')) + p;\r\n                const d = data ? (typeof data === 'string' ? data : JSON.stringify(data)) : undefined;\r\n                ses.debug('[simplicite.ExternalObject.call] ' + m + ' ' + u + ' with ' + (d ? ' with ' + d : ''));\r\n                fetch(u, {\r\n                    method: m,\r\n                    headers: h,\r\n                    cache: 'no-cache',\r\n                    mode: 'cors',\r\n                    credentials: 'include',\r\n                    body: d\r\n                }).then((res) => {\r\n                    const type = res.headers.get('content-type');\r\n                    ses.debug(`[${origin}] HTTP status = ${res.status}, response content type = ${type}`);\r\n                    if (type && type.startsWith('application/json')) { // JSON\r\n                        res.json().then(jsonData => {\r\n                            resolve.call(this, jsonData, res.status, res.headers);\r\n                        }).catch((err) => {\r\n                            err = ses.getError(err, undefined, origin);\r\n                            if (!(opts.error || ses.error).call(this, err))\r\n                                reject.call(this, err);\r\n                        });\r\n                    }\r\n                    else if (type && type.startsWith('text/')) { // Text\r\n                        res.text().then(textData => {\r\n                            resolve.call(this, textData, res.status, res.headers);\r\n                        }).catch((err) => {\r\n                            err = ses.getError(err, undefined, origin);\r\n                            if (!(opts.error || ses.error).call(this, err))\r\n                                reject.call(this, err);\r\n                        });\r\n                    }\r\n                    else { // Binary\r\n                        res.arrayBuffer().then(binData => {\r\n                            resolve.call(this, binData, res.status, res.headers);\r\n                        }).catch((err) => {\r\n                            err = ses.getError(err, undefined, origin);\r\n                            if (!(opts.error || ses.error).call(this, err))\r\n                                reject.call(this, err);\r\n                        });\r\n                    }\r\n                }).catch((err) => {\r\n                    err = ses.getError(err, undefined, origin);\r\n                    if (!(opts.error || ses.error).call(this, err))\r\n                        reject.call(this, err);\r\n                });\r\n            });\r\n        });\r\n        /**\r\n         * Alias to <code>call</code>\r\n         * @function\r\n         */\r\n        this.invoke = this.call;\r\n        this.session = ses;\r\n        this.metadata = new ExternalObjectMetadata(name);\r\n        this.path = this.session.parameters.extpath + '/' + encodeURIComponent(name);\r\n    }\r\n}\r\nexport default {\r\n    constants,\r\n    session,\r\n    Session,\r\n    Doc,\r\n    Grant,\r\n    BusinessObject,\r\n    BusinessObjectMetadata,\r\n    ExternalObject\r\n};\r\n//# sourceMappingURL=simplicite.js.map","import simplicite from '../dist/esm/simplicite.js';\n\nif (typeof globalThis !== 'undefined')\n\t// eslint-disable-next-line no-undef\n\tglobalThis.simplicite = simplicite;\nelse if (typeof self !== 'undefined')\n\tself.simplicite = simplicite;\nelse if (typeof window !== 'undefined')\n\twindow.simplicite = simplicite;\nelse if (typeof global !== 'undefined')\n\tglobal.simplicite = simplicite;\nelse\n\tthrow new Error('Unable to find global object');\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","global","self","window","getGlobal","module","fetch","bind","Headers","Request","Response","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","constants","MODULE_VERSION","DEFAULT_ROW_ID_NAME","DEFAULT_ROW_ID","CONTEXT_NONE","CONTEXT_SEARCH","CONTEXT_LIST","CONTEXT_CREATE","CONTEXT_COPY","CONTEXT_UPDATE","CONTEXT_DELETE","CONTEXT_GRAPH","CONTEXT_CROSSTAB","CONTEXT_PRINTTMPL","CONTEXT_UPDATEALL","CONTEXT_REFSELECT","CONTEXT_DATAMAPSELECT","CONTEXT_PREVALIDATE","CONTEXT_POSTVALIDATE","CONTEXT_STATETRANSITION","CONTEXT_EXPORT","CONTEXT_IMPORT","CONTEXT_ASSOCIATE","CONTEXT_PANELLIST","CONTEXT_ACTION","CONTEXT_AGENDA","CONTEXT_PLACEMAP","TYPE_ID","TYPE_INT","TYPE_FLOAT","TYPE_STRING","TYPE_DATE","TYPE_DATETIME","TYPE_TIME","TYPE_ENUM","TYPE_BOOLEAN","TYPE_PASSWORD","TYPE_URL","TYPE_HTML","TYPE_EMAIL","TYPE_LONG_STRING","TYPE_ENUM_MULTI","TYPE_REGEXP","TYPE_DOC","TYPE_FLOAT_EMPTY","TYPE_EXTFILE","TYPE_IMAGE","TYPE_NOTEPAD","TYPE_PHONENUM","TYPE_COLOR","TYPE_OBJECT","TYPE_GEOCOORDS","VIS_NOT","VIS_HIDDEN","VIS_LIST","VIS_FORM","VIS_BOTH","SEARCH_NONE","SEARCH_MONO","SEARCH_MULTI_CHECK","SEARCH_MULTI_LIST","SEARCH_PERIOD","TRUE","FALSE","ERRLEVEL_FATAL","ERRLEVEL_ERROR","ERRLEVEL_WARNING","RESOURCE_TYPE_IMAGE","RESOURCE_TYPE_ICON","RESOURCE_TYPE_STYLESHEET","RESOURCE_TYPE_JAVASCRIPT","Session","params","setUsername","usr","username","setPassword","pwd","password","setAuthToken","token","authtoken","setAuthTokenExpiryDate","expiry","authtokenexpiry","isAuthTokenExpired","Date","setAjaxKey","key","ajaxkey","getBusinessObjectCacheKey","instance","clear","sessionid","grant","appinfo","sysinfo","devinfo","businessObjectCache","Map","getBasicAuthHeader","getBearerTokenHeader","getError","err","status","origin","response","sendRequest","path","callback","errorHandler","h","Authorization","u","parameters","url","encodeURIComponent","JSON","stringify","debug","method","headers","cache","mode","credentials","body","text","textData","catch","parseResponse","parse","getHealth","opts","healthpath","full","r","health","login","authToken","loginpath","id","exp","setTime","toLocaleDateString","toLocaleTimeString","Grant","userid","firstname","lastname","email","logout","logoutpath","getGrant","p","pic","inlinePicture","picture","txt","includeTexts","texts","apppath","Doc","assign","changePassword","getAppInfo","getSysInfo","getDevInfo","getNews","inlineImages","images","news","image","indexSearch","query","object","metadata","context","getBusinessObject","cacheKey","BusinessObject","getExternalObject","ExternalObject","getResourceURL","objId","respath","inUI","globalThis","Simplicite","endpoint","ENDPOINT","logHandler","args","info","infoHandler","warn","warningHandler","debugMode","debugHandler","purl","URL","location","scheme","RegExp","host","port","root","startsWith","ep","timeout","objpath","extpath","docpath","AJAX_KEY","getId","getMIMEType","mime","getMimeType","setMIMEType","setMimeType","getFilename","filename","getFileName","setFilename","setFileName","getContent","content","getThumbnail","thumbnail","getContentAsArrayBuffer","getBuffer","getThumbnailAsArrayBuffer","getContentAsText","setContent","setContentFromText","getDataURL","getValue","getUserId","getUsername","getLogin","getLang","lang","getEmail","getFirstname","getFirstName","getLastname","getLastName","getPictureURL","hasResponsibility","group","responsibilities","T","BusinessObjectMetadata","rowidfield","label","help","fields","ses","getMetaData","session","contextParam","getMetadata","getName","getInstance","getLabel","getHelp","getFields","getField","fieldName","fs","getRowIdFieldName","getRowIdField","getLinks","links","getFieldType","field","getFieldLabel","getFieldValue","item","getFieldListValue","listOfValues","getListValue","getFieldDataURL","fullinput","getFieldDocument","getFieldDocumentURL","getRowId","l","setFieldValue","isRowIdField","ref","isTimestampField","getFilters","reset","filters","getReqOptions","options","inlineDocs","inlineDocuments","it","inlineThumbs","inlineThumbnails","io","inlineObjs","inlineObjects","convertFilterWildCards","filter","getReqParams","entries","k","row_id","sort","dd","getCount","count","page","maxpage","search","visible","meta","rowId","tv","treeView","f","social","getForCreate","treeview","getForUpdate","getForCopy","getForDelete","populate","getFieldLinkedList","linkedField","all","save","update","create","del","undoredo","action","crosstab","ctb","print","prt","mailing","placemap","pcm","setParameter","param","getParameter","inst","ExternalObjectMetadata","callParams","v","vv","toUpperCase","contentType","json","jsonData","arrayBuffer","binData","invoke","simplicite"],"sourceRoot":""}