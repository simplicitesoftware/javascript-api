{
  "version": 3,
  "sources": ["../build/cjs/simplicite.js"],
  "sourcesContent": ["\"use strict\";\r\n/**\r\n * Simplicite(R) platform Javascript API client module (for node.js and browser).\r\n * @module simplicite\r\n * @version 2.2.4\r\n * @license Apache-2.0\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar node_fetch_1 = __importDefault(require(\"node-fetch\")); // Node.js polyfill for fetch\r\nvar buffer_1 = require(\"buffer\"); // Browser polyfill for Buffer\r\n/**\r\n * Constants\r\n * @constant\r\n */\r\nvar constants = {\r\n    /**\r\n     * API client module version\r\n     * @constant {string}\r\n     */\r\n    MODULE_VERSION: '2.2.4',\r\n    /**\r\n     * Default row ID field name\r\n     * @constant {string}\r\n     */\r\n    DEFAULT_ROW_ID_NAME: 'row_id',\r\n    /**\r\n     * Default row ID value\r\n     * @constant {string}\r\n     */\r\n    DEFAULT_ROW_ID: '0',\r\n    /**\r\n     * Default context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_NONE: 0,\r\n    /**\r\n     * Search context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_SEARCH: 1,\r\n    /**\r\n     * List context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_LIST: 2,\r\n    /**\r\n     * Creation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_CREATE: 3,\r\n    /**\r\n     * Copy context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_COPY: 4,\r\n    /**\r\n     * Update context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_UPDATE: 5,\r\n    /**\r\n     * Delete context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_DELETE: 6,\r\n    /**\r\n     * Chart context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_GRAPH: 7,\r\n    /**\r\n     * Pivot table context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_CROSSTAB: 8,\r\n    /**\r\n     * Publication context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PRINTTMPL: 9,\r\n    /**\r\n     * Bulk update context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_UPDATEALL: 10,\r\n    /**\r\n     * Reference selection context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_REFSELECT: 11,\r\n    /**\r\n     * Datamap selection context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_DATAMAPSELECT: 12,\r\n    /**\r\n     * Pre validation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PREVALIDATE: 13,\r\n    /**\r\n     * Post validation context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_POSTVALIDATE: 14,\r\n    /**\r\n     * State transition context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_STATETRANSITION: 15,\r\n    /**\r\n     * Export context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_EXPORT: 16,\r\n    /**\r\n     * Import context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_IMPORT: 17,\r\n    /**\r\n     * Association context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_ASSOCIATE: 18,\r\n    /**\r\n     * Panle list context\r\n     * @constant {number}\r\n     */\r\n    CONTEXT_PANELLIST: 19,\r\n    /**\r\n     * Foreign key (reference) type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ID: 0,\r\n    /**\r\n     * Integer type\r\n     * @constant {number}\r\n     */\r\n    TYPE_INT: 1,\r\n    /**\r\n     * Decimal type\r\n     * @constant {number}\r\n     */\r\n    TYPE_FLOAT: 2,\r\n    /**\r\n     * Short string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_STRING: 3,\r\n    /**\r\n     * Date type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DATE: 4,\r\n    /**\r\n     * Date and time type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DATETIME: 5,\r\n    /**\r\n     * Time type\r\n     * @constant {number}\r\n     */\r\n    TYPE_TIME: 6,\r\n    /**\r\n     * Simple enumeration type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ENUM: 7,\r\n    /**\r\n     * Boolean type\r\n     * @constant {number}\r\n     */\r\n    TYPE_BOOLEAN: 8,\r\n    /**\r\n     * Password type\r\n     * @constant {number}\r\n     */\r\n    TYPE_PASSWORD: 9,\r\n    /**\r\n     * URL type\r\n     * @constant {number}\r\n     */\r\n    TYPE_URL: 10,\r\n    /**\r\n     * HTML content type\r\n     * @constant {number}\r\n     */\r\n    TYPE_HTML: 11,\r\n    /**\r\n     * Email type\r\n     * @constant {number}\r\n     */\r\n    TYPE_EMAIL: 12,\r\n    /**\r\n     * Long string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_LONG_STRING: 13,\r\n    /**\r\n     * Multiple enumeration type\r\n     * @constant {number}\r\n     */\r\n    TYPE_ENUM_MULTI: 14,\r\n    /**\r\n     * Validated string type\r\n     * @constant {number}\r\n     */\r\n    TYPE_REGEXP: 15,\r\n    /**\r\n     * Document type\r\n     * @constant {number}\r\n     */\r\n    TYPE_DOC: 17,\r\n    /**\r\n     * Decimal type\r\n     * @constant {number}\r\n     * @deprecated\r\n     */\r\n    TYPE_FLOAT_EMPTY: 18,\r\n    /**\r\n     * External file type\r\n     * @constant {number}\r\n     * @deprecated\r\n     */\r\n    TYPE_EXTFILE: 19,\r\n    /**\r\n     * Image type\r\n     * @constant {number}\r\n     */\r\n    TYPE_IMAGE: 20,\r\n    /**\r\n     * Notepad type\r\n     * @constant {number}\r\n     */\r\n    TYPE_NOTEPAD: 21,\r\n    /**\r\n     * Phone number type\r\n     * @constant {number}\r\n     */\r\n    TYPE_PHONENUM: 22,\r\n    /**\r\n     * RGB color type\r\n     * @constant {number}\r\n     */\r\n    TYPE_COLOR: 23,\r\n    /**\r\n     * Object type\r\n     * @constant {number}\r\n     */\r\n    TYPE_OBJECT: 24,\r\n    /**\r\n     * Geocoordinates type\r\n     * @constant {number}\r\n     */\r\n    TYPE_GEOCOORDS: 25,\r\n    /**\r\n     * Not visible\r\n     * @constant {number}\r\n     */\r\n    VIS_NOT: 0,\r\n    /**\r\n     * Hiiden (same as not visible)\r\n     * @constant {number}\r\n     */\r\n    VIS_HIDDEN: 0,\r\n    /**\r\n     * Visible on lists only\r\n     * @constant {number}\r\n     */\r\n    VIS_LIST: 1,\r\n    /**\r\n     * Visible on forms only\r\n     * @constant {number}\r\n     */\r\n    VIS_FORM: 2,\r\n    /**\r\n     * Visible on both lists and forms only\r\n     * @constant {number}\r\n     */\r\n    VIS_BOTH: 3,\r\n    /**\r\n     * No search\r\n     * @constant {number}\r\n     */\r\n    SEARCH_NONE: 0,\r\n    /**\r\n     * Simple search\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MONO: 1,\r\n    /**\r\n     * Multiple search (checkboxes)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MULTI_CHECK: 2,\r\n    /**\r\n     * Multiple search (listbox)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_MULTI_LIST: 3,\r\n    /**\r\n     * Search by period (date/time)\r\n     * @constant {number}\r\n     */\r\n    SEARCH_PERIOD: 4,\r\n    /**\r\n     * True\r\n     * @constant {string}\r\n     */\r\n    TRUE: '1',\r\n    /**\r\n     * False\r\n     * @constant {string}\r\n     */\r\n    FALSE: '0',\r\n    /**\r\n     * Fatal error level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_FATAL: 1,\r\n    /**\r\n     * Error level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_ERROR: 2,\r\n    /**\r\n     * Warning level\r\n     * @constant {number}\r\n     */\r\n    ERRLEVEL_WARNING: 3,\r\n    /**\r\n     * Image resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_IMAGE: 'IMG',\r\n    /**\r\n     * Icon resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_ICON: 'ICO',\r\n    /**\r\n     * Stylesheet resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_STYLESHEET: 'CSS',\r\n    /**\r\n     * Javascript resource type\r\n     * @constant {number}\r\n     */\r\n    RESOURCE_TYPE_JAVASCRIPT: 'JS'\r\n};\r\n/**\r\n * Simplicite application session. Same as <code>new Session(parameter)</code>.\r\n * @param {object} params Parameters (see session class for details)\r\n * @return {Session} session\r\n*/\r\nvar session = function (params) {\r\n    return new Session(params);\r\n};\r\n/**\r\n * Simplicite application session.\r\n * @param {object} params Parameters\r\n * @param {string} params.url Base URL of the Simplicite application\r\n * @param {string} params.scheme URL scheme (e.g. <code>'https'</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {string} params.host Hostname or IP address (e.g. <code>'myhost.mydomain.com'</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {number} params.port Port (e.g. <code>443</code>) of the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {string} params.root Root context URL (e.g. <code>'/myapp'</code>) the Simplicite application (not needed if <code>url</code> is set)\r\n * @param {boolean} [params.endpoint='api'] Endpoint (<code>'api'|'ui'|'public'</code>)\r\n * @param {string} [params.username] Username (not needed for public endpoint)\r\n * @param {string} [params.password] Password (not needed for public endpoint)\r\n * @param {string} [params.authtoken] Auth token (if set, username and password are not needed; not needed for public endpoint)\r\n * @param {boolean} [params.debug=false] Debug mode?\r\n * @param {function} [params.debugHandler] Debug handler function\r\n * @param {function} [params.infoHandler] Info handler function\r\n * @param {function} [params.warningHandler] Warning handler function\r\n * @param {function} [params.errorHandler] Error handler function\r\n * @param {function} [params.logHandler] Log handler function\r\n * @class\r\n */\r\nvar Session = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param params {object} Parameters\r\n     */\r\n    function Session(params) {\r\n        var _this = this;\r\n        /**\r\n         * Constants\r\n         * @member\r\n         */\r\n        this.constants = constants;\r\n        /**\r\n         * Set username\r\n         * @param {string} usr Username\r\n         * @function\r\n         */\r\n        this.setUsername = function (usr) {\r\n            _this.username = usr;\r\n        };\r\n        /**\r\n         * Set password\r\n         * @param {string} pwd Password\r\n         * @function\r\n         */\r\n        this.setPassword = function (pwd) {\r\n            _this.password = pwd;\r\n        };\r\n        /**\r\n         * Set auth token\r\n         * @param {string} token Auth token\r\n         * @function\r\n         */\r\n        this.setAuthToken = function (token) {\r\n            _this.authtoken = token;\r\n        };\r\n        /**\r\n         * Get business object cache key\r\n         * @param {string} name Business object name\r\n         * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n         * @return {object} Business object cache key\r\n         * @private\r\n         */\r\n        this.getBusinessObjectCacheKey = function (name, instance) {\r\n            return name + ':' + (instance || 'js_' + name);\r\n        };\r\n        /**\r\n         * Clears all data (credentials, objects, ...)\r\n         * @function\r\n         */\r\n        this.clear = function () {\r\n            _this.username = undefined;\r\n            _this.password = undefined;\r\n            _this.authtoken = undefined;\r\n            _this.sessionid = undefined;\r\n            _this.grant = undefined;\r\n            _this.appinfo = undefined;\r\n            _this.sysinfo = undefined;\r\n            _this.devinfo = undefined;\r\n            _this.businessObjectCache = new Map();\r\n        };\r\n        /**\r\n         * Basic HTTP authorization header value\r\n         * @return {string} HTTP authorization header value\r\n         * @private\r\n         */\r\n        this.getBasicAuthHeader = function () {\r\n            return _this.username && _this.password\r\n                ? 'Basic ' + buffer_1.Buffer.from(_this.username + ':' + _this.password).toString('base64')\r\n                : undefined;\r\n        };\r\n        /**\r\n         * Get bearer token header value\r\n         * @return {string} Bearer token header value\r\n         * @private\r\n         */\r\n        this.getBearerTokenHeader = function () {\r\n            return _this.authtoken\r\n                ? 'Bearer ' + _this.authtoken\r\n                : undefined;\r\n        };\r\n        /**\r\n         * Get error object\r\n         * @param {(string|object)} err Error\r\n         * @param {string} err.message Error message\r\n         * @param {number} [status] Optional error status (defaults to 200)\r\n         * @param {string} [origin] Optional error origin\r\n         * @return {object} Error object\r\n         * @private\r\n         */\r\n        this.getError = function (err, status, origin) {\r\n            if (typeof err === 'string') { // plain text error\r\n                return { message: err, status: status || 200, origin: origin };\r\n            }\r\n            else if (err.response) { // wrapped error\r\n                if (typeof err.response === 'string') {\r\n                    return { message: err.response, status: status || 200, origin: origin };\r\n                }\r\n                else {\r\n                    if (origin)\r\n                        try {\r\n                            err.response.origin = origin;\r\n                        }\r\n                        catch (e) { /* ignore */ }\r\n                    return err.response;\r\n                }\r\n            }\r\n            else { // other cases\r\n                if (origin)\r\n                    try {\r\n                        err.origin = origin;\r\n                    }\r\n                    catch (e) { /* ignore */ }\r\n                return err;\r\n            }\r\n        };\r\n        /**\r\n         * Request\r\n         * @param {string} path Path\r\n         * @param {object} [data] Data\r\n         * @param {function} [callback] Callback\r\n         * @param {function} [errorHandler] Error handler\r\n         * @private\r\n         */\r\n        this.req = function (path, data, callback, errorHandler) {\r\n            var origin = 'Session.req';\r\n            var m = data ? 'POST' : 'GET';\r\n            var h = {};\r\n            if (data)\r\n                h['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\r\n            var b = _this.getBearerTokenHeader();\r\n            if (b) {\r\n                h['X-Simplicite-Authorization'] = b;\r\n            }\r\n            else {\r\n                b = _this.getBasicAuthHeader();\r\n                if (b)\r\n                    h['Authorization'] = b;\r\n            }\r\n            var u = _this.parameters.url + path || '/';\r\n            var d = data ? (typeof data === 'string' ? data : JSON.stringify(data)) : undefined;\r\n            _this.debug(\"[\" + origin + \"] \" + m + \" \" + u + (d ? ' with ' + d : ''));\r\n            (0, node_fetch_1.default)(u, {\r\n                method: m,\r\n                headers: h,\r\n                timeout: _this.parameters.timeout * 1000,\r\n                mode: 'cors',\r\n                credentials: 'include',\r\n                body: d\r\n            }).then(function (res) {\r\n                if (callback) {\r\n                    res.text().then(function (textData) {\r\n                        callback.call(_this, textData, res.status, res.headers);\r\n                    });\r\n                }\r\n            }).catch(function (err) {\r\n                var s = err.response && err.response.status ? err.response.status : undefined;\r\n                var e = err.response && err.response.data ? err.response.data : err;\r\n                if (errorHandler)\r\n                    errorHandler.call(_this, _this.getError(e, s, origin));\r\n                else\r\n                    throw e;\r\n            });\r\n        };\r\n        /**\r\n         * Parse result\r\n         * @param {object} res Response to parse\r\n         * @param {number} [status=200] HTTP status\r\n         * @return {object} Error object\r\n         * @private\r\n         */\r\n        this.parse = function (res, status) {\r\n            try {\r\n                if (status !== 200)\r\n                    return { type: 'error', response: _this.getError('HTTP status: ' + status, status) };\r\n                return typeof res === 'object' ? res : JSON.parse(res);\r\n            }\r\n            catch (e) {\r\n                return { type: 'error', response: _this.getError('Parsing error: ' + e.message, status) };\r\n            }\r\n        };\r\n        /**\r\n         * Get health check (no need to be authenticated)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.full=false] Full health check?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the health data\r\n         * @function\r\n         */\r\n        this.getHealth = function (opts) {\r\n            var origin = 'Session.getHealth';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.req(_this.parameters.healthpath + \"&full=\" + !!opts.full, undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + res);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        resolve && resolve.call(_this, r);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Login\r\n         * @param {object} [opts] Options\r\n         * @param {string} [opts.username] Username (exclusive with authentication token)\r\n         * @param {string} [opts.password] Password (required if username is set)\r\n         * @param {string} [opts.authtoken] Authentication token ((exclusive with username)\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the login result\r\n         * @function\r\n         */\r\n        this.login = function (opts) {\r\n            var origin = 'Session.login';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if ((opts.username || opts.login) && (opts.password || opts.pwd)) {\r\n                    _this.clear();\r\n                    _this.username = opts.username || opts.login;\r\n                    _this.password = opts.password || opts.pwd;\r\n                }\r\n                else if (opts.authtoken || opts.authToken || opts.token) {\r\n                    _this.clear();\r\n                    _this.authtoken = opts.authtoken || opts.authToken || opts.token;\r\n                }\r\n                _this.req(_this.parameters.apppath + \"?action=session\", undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.sessionid = r.response.id;\r\n                        _this.debug(\"[\" + origin + \"] Session ID = \" + _this.sessionid);\r\n                        _this.username = r.response.login;\r\n                        if (_this.username)\r\n                            _this.debug(\"[\" + origin + \"] Username = \" + _this.username);\r\n                        _this.authtoken = r.response.authtoken;\r\n                        if (_this.authtoken)\r\n                            _this.debug(\"[\" + origin + \"] Auth token = \" + _this.authtoken);\r\n                        // Minimal grant from session data\r\n                        _this.grant = new Grant({\r\n                            login: r.response.login,\r\n                            userid: r.response.userid,\r\n                            firstname: r.response.firstanme,\r\n                            lastname: r.response.lastname,\r\n                            email: r.response.email\r\n                        });\r\n                        resolve && resolve.call(_this, r.response);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Logout\r\n         * @param {function} callback Callback (called upon success)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the logout result\r\n         * @function\r\n         */\r\n        this.logout = function (opts) {\r\n            var origin = 'Session.logout';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.req(_this.parameters.apppath + \"?action=logout\", undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.clear();\r\n                        resolve && resolve.call(_this, r.response);\r\n                    }\r\n                }, function (err) {\r\n                    if (err.status === 401) // Removes (expired or deleted) token if any\r\n                        _this.authtoken = undefined;\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get grant (current user data)\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.inlinePicture=false] Inline user picture?\r\n         * @param {boolean} [opts.includeTexts=false] Include texts?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<Grant>} A promise to the grant (also available as the <code>grant</code> member)\r\n         * @function\r\n         */\r\n        this.getGrant = function (opts) {\r\n            var origin = 'Session.getGrant';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '&web=true'; // Required to be able to include texts\r\n                var pic = !!opts.inlinePicture || !!opts.picture; // naming flexibility\r\n                if (pic)\r\n                    p += '&inline_picture=true';\r\n                var txt = !!opts.includeTexts || !!opts.texts; // naming flexibility\r\n                if (txt)\r\n                    p += '&texts=true';\r\n                _this.req(_this.parameters.apppath + \"?action=getgrant\" + p, undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.grant = new Grant(r.response); // Set as Grant\r\n                        if (pic)\r\n                            _this.grant.picture = new Doc(_this.grant.picture); // Set picture as Document\r\n                        if (txt)\r\n                            _this.grant.texts = Object.assign(new Map(), _this.grant.texts); // Set texts as Map\r\n                        resolve && resolve.call(_this, _this.grant);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Change password\r\n         * @param {string} pwd Password\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the change password result\r\n         * @function\r\n         */\r\n        this.changePassword = function (pwd, opts) {\r\n            var origin = 'Session.changePassword';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.req(_this.parameters.apppath + \"?action=setpassword&password=\" + encodeURIComponent(pwd), undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error')\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    else\r\n                        resolve && resolve.call(_this, r.response);\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get application info\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the application info (also avialable as the <code>appinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getAppInfo = function (opts) {\r\n            var origin = 'Session.getAppInfo';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.req(_this.parameters.apppath + \"?action=getinfo\", undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.appinfo = r.response;\r\n                        resolve && resolve.call(_this, _this.appinfo);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get system info\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the system info (also avialable as the <code>sysinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getSysInfo = function (opts) {\r\n            var origin = 'Session.getSysInfo';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.req(_this.parameters.apppath + \"?action=sysinfo\", undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.sysinfo = r.response;\r\n                        resolve && resolve.call(_this, _this.sysinfo);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get development info\r\n         * @param {string} [module] Module name\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the develoment info (also avialable as the <code>devinfo</code> member)\r\n         * @function\r\n         */\r\n        this.getDevInfo = function (module, opts) {\r\n            var origin = 'Session.getDevInfo';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                if (module)\r\n                    p += '&module=' + encodeURIComponent(module);\r\n                _this.req(_this.parameters.apppath + \"?action=devinfo\" + p, undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        if (!module)\r\n                            _this.devinfo = r.response;\r\n                        resolve && resolve.call(_this, r.response);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get news\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.inlineImages=false] Inline news images?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} A promise to the list of news (also avialable as the <code>news</code> member)\r\n         * @function\r\n         */\r\n        this.getNews = function (opts) {\r\n            var origin = 'Session.getHealth';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                var img = !!opts.inlineImages || !!opts.images; // naming flexibility\r\n                if (img)\r\n                    p += '&inline_images=true';\r\n                _this.req(_this.parameters.apppath + \"?action=news\" + p, undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.news = r.response;\r\n                        for (var _i = 0, _a = _this.news; _i < _a.length; _i++) {\r\n                            var n = _a[_i];\r\n                            n.image = new Doc(n.image);\r\n                        } // Set image as document\r\n                        resolve && resolve.call(_this, _this.news);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Index search\r\n         * @param {string} query Index search query\r\n         * @param {string} [object] Object\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Add meta data for each result\r\n         * @param {number} [opts.context] Context\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} A promise to a list of index search records\r\n         * @function\r\n         */\r\n        this.indexSearch = function (query, object, opts) {\r\n            var origin = 'Session.indexSearch';\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                if (opts.metadata === true)\r\n                    p += '&_md=true';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                _this.req(_this.parameters.apppath + \"?action=indexsearch&request=\" + encodeURIComponent(query ? query : '') + (object ? '&object=' + encodeURIComponent(object) : '') + p, undefined, function (res, status) {\r\n                    var r = _this.parse(res, status);\r\n                    _this.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error')\r\n                        (opts.error || _this.error || reject).call(_this, _this.getError(r.response, undefined, origin));\r\n                    else\r\n                        resolve && resolve.call(_this, r.response);\r\n                }, function (err) {\r\n                    (opts.error || _this.error || reject).call(_this, _this.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get business object\r\n         * @param {string} name Business object name\r\n         * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n         * @return {BusinessObject} Business object\r\n         * @function\r\n         */\r\n        this.getBusinessObject = function (name, instance) {\r\n            var cacheKey = _this.getBusinessObjectCacheKey(name, instance);\r\n            var obj = _this.businessObjectCache[cacheKey];\r\n            if (!obj) {\r\n                obj = new BusinessObject(_this, name, instance);\r\n                _this.businessObjectCache[cacheKey] = obj;\r\n            }\r\n            return obj;\r\n        };\r\n        /**\r\n         * Get an external object\r\n         * @param {string} name External object name\r\n         * @function\r\n         */\r\n        this.getExternalObject = function (name) {\r\n            return new ExternalObject(_this, name);\r\n        };\r\n        /**\r\n         * Get a resource URL\r\n         * @param {string} code Resource code\r\n         * @param {string} [type=IMG] Resource type (IMG=image (default), ICO=Icon, CSS=stylesheet, JS=Javascript, HTML=HTML)\r\n         * @param {string} [object] Object name (not required for global resources)\r\n         * @param {string} [objId] Object ID (not required for global resources)\r\n         * @function\r\n         */\r\n        this.getResourceURL = function (code, type, object, objId) {\r\n            return _this.parameters.url + _this.parameters.respath\r\n                + '?code=' + encodeURIComponent(code) + '&type=' + encodeURIComponent(type || 'IMG')\r\n                + (object ? '&object=' + encodeURIComponent(object) : '')\r\n                + (objId ? '&objid=' + encodeURIComponent(objId) : '')\r\n                + (_this.authtoken ? '_x_simplicite_authorization_=' + encodeURIComponent(_this.authtoken) : '');\r\n        };\r\n        if (!params)\r\n            throw 'No session parammeters';\r\n        this.endpoint = params.endpoint || \"api\" /* API */;\r\n        this.log = params.logHandler || (function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            console.log(args);\r\n        });\r\n        this.info = params.infoHandler || (function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            console.info('INFO', args);\r\n        });\r\n        this.warn = params.warningHandler || (function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            console.warn('WARN', args);\r\n        });\r\n        this.error = params.errorHandler || (function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            console.error('ERROR', args);\r\n        });\r\n        this.debugMode = !!params.debug;\r\n        this.debug = params.debugHandler || (function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (_this.debugMode)\r\n                console.log('DEBUG', args);\r\n        });\r\n        if (params.url) {\r\n            try {\r\n                params.scheme = params.url.replace(/:.*$/, '');\r\n                var u = params.url.replace(new RegExp('^' + params.scheme + '://'), '').split(':');\r\n                if (u.length === 1) {\r\n                    params.host = u[0].replace(/\\/.*$/, '');\r\n                    params.port = params.scheme === 'http' ? 80 : 443;\r\n                    params.root = u[0].replace(new RegExp('^' + params.host + '/?'), '');\r\n                }\r\n                else {\r\n                    params.host = u[0];\r\n                    params.port = parseInt(u[1].replace(/\\/.*$/, ''), 10);\r\n                    if (isNaN(params.port))\r\n                        throw new Error('Incorrect port');\r\n                    params.root = u[1].replace(new RegExp('^' + params.port + '/?'), '');\r\n                }\r\n                if (params.root === '/')\r\n                    params.root = '';\r\n            }\r\n            catch (e) {\r\n                this.error('Unable to parse URL [' + params.url + ']: ' + e.message);\r\n                return;\r\n            }\r\n        }\r\n        var scheme = params.scheme || (params.port === 443 ? 'https' : 'http');\r\n        if (scheme !== 'http' && scheme !== 'https') {\r\n            this.error('Incorrect scheme [' + params.scheme + ']');\r\n            return;\r\n        }\r\n        var host = params.host || 'localhost';\r\n        var port = params.port || 8080;\r\n        var root = params.root || '';\r\n        if (root === '/')\r\n            root = '';\r\n        var url = scheme + '://' + host;\r\n        if ((scheme === 'http' && port != 80) || (scheme === 'https' && port != 443))\r\n            url += ':' + port;\r\n        if (root !== '')\r\n            url += root.startsWith('/') ? root : '/' + root;\r\n        this.debug('[simplicite] Base URL = ' + url);\r\n        var ep = this.endpoint == 'public' ? '' : '/' + this.endpoint;\r\n        this.parameters = {\r\n            scheme: scheme,\r\n            host: host,\r\n            port: port,\r\n            root: root,\r\n            url: url,\r\n            timeout: params.timeout || 30,\r\n            healthpath: (ep == '/ui' ? ep : '') + '/health?format=json',\r\n            apppath: ep + '/json/app',\r\n            objpath: ep + '/json/obj',\r\n            extpath: ep + '/ext',\r\n            docpath: ep + '/raw/document',\r\n            respath: '/resource'\r\n        };\r\n        this.username = params.username || params.login; // naming flexibility\r\n        this.password = params.password || params.pwd; // naming flexibility\r\n        this.authtoken = params.authtoken || params.token; // naming flexibility\r\n        this.businessObjectCache = new Map();\r\n    }\r\n    return Session;\r\n}());\r\n/**\r\n * Document\r\n * @class\r\n */\r\nvar Doc = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param value {object} Document value\r\n     */\r\n    function Doc(value) {\r\n        var _this = this;\r\n        /**\r\n         * Get the document ID\r\n         * @return {string} ID\r\n         * @function\r\n         */\r\n        this.getId = function () {\r\n            return _this.id;\r\n        };\r\n        /**\r\n         * Get the document MIME type\r\n         * @return {string} MIME type\r\n         * @function\r\n         */\r\n        this.getMIMEType = function () {\r\n            return _this.mime;\r\n        };\r\n        /**\r\n         * Alias to <code>getMIMEType</code>\r\n         * @return {string} MIME type\r\n         * @function\r\n         */\r\n        this.getMimeType = this.getMIMEType;\r\n        /**\r\n         * Set the document MIME type\r\n         * @param {string} mime MIME type\r\n         * @function\r\n         */\r\n        this.setMIMEType = function (mime) {\r\n            _this.mime = mime;\r\n        };\r\n        /**\r\n         * Alias to <code>setMIMEType</code>\r\n         * @param {string} mime MIME type\r\n         * @function\r\n         */\r\n        this.setMimeType = this.setMIMEType;\r\n        /**\r\n         * Get the document file name\r\n         * @return {string} File name\r\n         * @function\r\n         */\r\n        this.getFilename = function () {\r\n            return _this.filename;\r\n        };\r\n        /**\r\n         * Alias to <code>getFilename</code>\r\n         * @return {string} File name\r\n         * @function\r\n         */\r\n        this.getFileName = this.getFilename;\r\n        /**\r\n         * Set the document file name\r\n         * @param {string} filename File name\r\n         * @function\r\n         */\r\n        this.setFilename = function (filename) {\r\n            _this.filename = filename;\r\n        };\r\n        /**\r\n         * Alias to <code>setFilename</code>\r\n         * @param {string} filename File name\r\n         * @function\r\n         */\r\n        this.setFileName = this.setFilename;\r\n        /**\r\n         * Get the document content (encoded in base 64)\r\n         * @return {string} Content\r\n         * @function\r\n         */\r\n        this.getContent = function () {\r\n            return _this.content;\r\n        };\r\n        /**\r\n         * Get the document thumbnail (encoded in base 64)\r\n         * @return {string} Thumbnail\r\n         * @function\r\n         */\r\n        this.getThumbnail = function () {\r\n            return _this.thumbnail;\r\n        };\r\n        /**\r\n         * Get the document content as an array buffer\r\n         * @return {ArrayBuffer} Content as an array buffer\r\n         * @function\r\n         */\r\n        this.getContentAsArrayBuffer = function () {\r\n            return _this.getBuffer(_this.content).buffer;\r\n        };\r\n        /**\r\n         * Get the document thumbnail as an array buffer\r\n         * @return {ArrayBuffer} Thumbnail as an array buffer\r\n         * @function\r\n         */\r\n        this.getThumbnailAsArrayBuffer = function () {\r\n            return _this.getBuffer(_this.thumbnail || '').buffer;\r\n        };\r\n        /**\r\n         * Get the document content as a text\r\n         * @return {string} Content as plain text\r\n         * @function\r\n         */\r\n        this.getContentAsText = function () {\r\n            return _this.getBuffer(_this.content).toString('utf-8');\r\n        };\r\n        /**\r\n         * Set the document content\r\n         * @param {string} content Content (encoded in base 64)\r\n         * @function\r\n         */\r\n        this.setContent = function (content) {\r\n            _this.content = content;\r\n        };\r\n        /**\r\n         * Set the document content from plain text string\r\n         * @param {string} content Content as plain text string\r\n         * @function\r\n         */\r\n        this.setContentFromText = function (content) {\r\n            _this.content = buffer_1.Buffer.from(content, 'utf-8').toString('base64');\r\n        };\r\n        /**\r\n         * Get the document data URL\r\n         * @param {boolean} [thumbnail=false] Thumbnail? If thumbnail does not exists the content is used.\r\n         * @return {string} Data URL or nothing if content is empty\r\n         */\r\n        this.getDataURL = function (thumbnail) {\r\n            if (_this.content)\r\n                return 'data:' + _this.mime + ';base64,' + (thumbnail && _this.thumbnail ? _this.thumbnail : _this.content);\r\n        };\r\n        /**\r\n         * Get the document as a simple value\r\n         * @return {object} Value\r\n         */\r\n        this.getValue = function () {\r\n            return JSON.parse(JSON.stringify(_this)); // Strips all functions\r\n        };\r\n        Object.assign(this, value);\r\n    }\r\n    /**\r\n     * Get the document content as a buffer\r\n     * @param {any} data Content data\r\n     * @return {buffer} Content data as buffer\r\n     * @private\r\n     */\r\n    Doc.prototype.getBuffer = function (data) {\r\n        return buffer_1.Buffer.from(data, 'base64');\r\n    };\r\n    return Doc;\r\n}());\r\n/**\r\n * Grant (user).\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>data</code> variable got using <code>getGrant</code></span>.\r\n * @class\r\n */\r\nvar Grant = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param grant {object} Grant object\r\n     */\r\n    function Grant(grant) {\r\n        var _this = this;\r\n        /**\r\n         * Get user ID\r\n         * @return {string} User ID\r\n         * @function\r\n         */\r\n        this.getUserId = function () {\r\n            return _this.userid;\r\n        };\r\n        /**\r\n         * Get username\r\n         * @return {string} Username\r\n         * @function\r\n         */\r\n        this.getUsername = function () {\r\n            return _this.login;\r\n        };\r\n        /**\r\n         * Alias to <code>getUsername</code>\r\n         * @return {string} Login\r\n         * @function\r\n         */\r\n        this.getLogin = this.getUsername; // Naming flexibility\r\n        /**\r\n         * Get user language\r\n         * @return {string} User language\r\n         * @function\r\n         */\r\n        this.getLang = function () {\r\n            return _this.lang;\r\n        };\r\n        /**\r\n         * Get email address\r\n         * @return {string} Email address\r\n         * @function\r\n         */\r\n        this.getEmail = function () {\r\n            return _this.email;\r\n        };\r\n        /**\r\n         * Get first name\r\n         * @return {string} First name\r\n         * @function\r\n         */\r\n        this.getFirstname = function () {\r\n            return _this.firstname;\r\n        };\r\n        /**\r\n         * Alias to <code>getFirstname</code>\r\n         * @return {string} First name\r\n         * @function\r\n         */\r\n        this.getFirstName = this.getFirstname; // Naming flexibility\r\n        /**\r\n         * Get last name\r\n         * @return {string} Last name\r\n         * @function\r\n         */\r\n        this.getLastname = function () {\r\n            return _this.lastname;\r\n        };\r\n        /**\r\n         * Alias to <code>getLastname</code>\r\n         * @return {string} Last name\r\n         * @function\r\n         */\r\n        this.getLastName = this.getLastname; // Naming flexibility\r\n        /**\r\n         * Get picture data URL\r\n         * @return {Doc} Picture data URL\r\n         * @function\r\n         */\r\n        this.getPictureURL = function () {\r\n            if (_this.picture)\r\n                return 'data:' + _this.picture.mime + ';base64,' + _this.picture.content;\r\n        };\r\n        /**\r\n         * Has responsibility\r\n         * @param {string} group Group name\r\n         * @return {boolean} True if user has a responsibility on the specified group\r\n         * @function\r\n         */\r\n        this.hasResponsibility = function (group) {\r\n            return _this.responsibilities && _this.responsibilities.indexOf(group) !== -1;\r\n        };\r\n        /**\r\n         * Get text value\r\n         * @param {string} code Text code\r\n         * @return {string} Text value\r\n         */\r\n        this.T = function (code) {\r\n            return _this.texts ? _this.texts[code] || '' : '';\r\n        };\r\n        Object.assign(this, grant);\r\n    }\r\n    return Grant;\r\n}());\r\n/**\r\n * Business object meta data.\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>metadata</code> variable of your <code>BusinessObject</code> instances</span>.\r\n * @class\r\n */\r\nvar BusinessObjectMetadata = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {string} name Business object name\r\n     * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n     */\r\n    function BusinessObjectMetadata(name, instance) {\r\n        this.name = name;\r\n        this.instance = instance;\r\n        this.rowidfield = constants.DEFAULT_ROW_ID_NAME;\r\n        this.label = name;\r\n        this.help = '';\r\n        this.fields = new Array();\r\n    }\r\n    return BusinessObjectMetadata;\r\n}());\r\n/**\r\n * Business object.\r\n * <br/><span style=\"color: red;\">ou <strong>should never</strong> instanciate this class directly\r\n * but rather call <code>getBusinessObject</code> to get a cached instance</span>.\r\n * @class\r\n */\r\nvar BusinessObject = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {Session} session Session\r\n     * @param {string} name Business object name\r\n     * @param {string} [instance] Business object instance name, defaults to <code>js_&lt;object name&gt;</code>\r\n     */\r\n    function BusinessObject(session, name, instance) {\r\n        var _this = this;\r\n        /**\r\n         * Get meta data\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.context] Context\r\n         * @param {string} [opts.contextParam] Context parameter\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<BusinessObjectMetadata>} A promise to the object'ts meta data (also available as the <code>metadata</code> member)\r\n         * @function\r\n         */\r\n        this.getMetaData = function (opts) {\r\n            var origin = 'BusinessObject.getMetaData';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                if (opts.contextParam)\r\n                    p += '&contextparam=' + encodeURIComponent(opts.contextParam);\r\n                ses.req(_this.path + '&action=metadata' + p, undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.metadata = r.response;\r\n                        resolve && resolve.call(_this, _this.metadata);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get meta data (alias to getMetaData)\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.context] Context\r\n         * @param {string} [opts.contextParam] Context parameter\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<BusinessObjectMetadata>} A promise to the object'ts meta data (also available as the <code>metadata</code> member)\r\n         * @function\r\n         */\r\n        this.getMetadata = this.getMetaData;\r\n        /**\r\n         * Get name\r\n         * @return {string} Name\r\n         * @function\r\n         */\r\n        this.getName = function () {\r\n            return _this.metadata.name;\r\n        };\r\n        /**\r\n         * Get instance name\r\n         * @return {string} Instance name\r\n         * @function\r\n         */\r\n        this.getInstance = function () {\r\n            return _this.metadata.instance;\r\n        };\r\n        /**\r\n         * Get display label\r\n         * @return {string} Display label\r\n         * @function\r\n         */\r\n        this.getLabel = function () {\r\n            return _this.metadata.label;\r\n        };\r\n        /**\r\n         * Get help\r\n         * @return {string} Help\r\n         * @function\r\n         */\r\n        this.getHelp = function () {\r\n            return _this.metadata.help;\r\n        };\r\n        /**\r\n         * Get all fields definitions\r\n         * @return {array} Array of field definitions\r\n         * @function\r\n         */\r\n        this.getFields = function () {\r\n            return _this.metadata.fields;\r\n        };\r\n        /**\r\n         * Get a field definition\r\n         * @param {string} fieldName Field name\r\n         * @return {object} Field definition\r\n         * @function\r\n         */\r\n        this.getField = function (fieldName) {\r\n            var fs = _this.getFields();\r\n            var n = 0;\r\n            while (n < fs.length && fs[n].name !== fieldName)\r\n                n++;\r\n            if (n < fs.length)\r\n                return fs[n];\r\n        };\r\n        /**\r\n         * Get row ID field name\r\n         * @return {string} Row ID field name\r\n         * @function\r\n         */\r\n        this.getRowIdFieldName = function () {\r\n            return _this.metadata.rowidfield;\r\n        };\r\n        /**\r\n         * Get row ID field definition\r\n         * @return {object} Row ID field definition\r\n         * @function\r\n         */\r\n        this.getRowIdField = function () {\r\n            return _this.getField(_this.getRowIdFieldName());\r\n        };\r\n        /**\r\n         * Get links\r\n         * @return {array} Array of links\r\n         * @function\r\n         */\r\n        this.getLinks = function () {\r\n            return _this.metadata.links;\r\n        };\r\n        /**\r\n         * Get field type\r\n         * @param {(string|object)} field Field name or definition\r\n         * @return {string} Type (one of <code>constants.TYPE_*</code>)\r\n         * @function\r\n         */\r\n        this.getFieldType = function (field) {\r\n            if (typeof field === 'string')\r\n                field = _this.getField(field);\r\n            if (field)\r\n                return field.type;\r\n        };\r\n        /**\r\n         * Get field label\r\n         * @param {(string|object)} field Field name or definition\r\n         * @return {string} Field label\r\n         * @function\r\n         */\r\n        this.getFieldLabel = function (field) {\r\n            if (typeof field === 'string')\r\n                field = _this.getField(field);\r\n            if (field)\r\n                return field.label;\r\n        };\r\n        /**\r\n         * Get value of field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string|Doc} Value\r\n         * @function\r\n         */\r\n        this.getFieldValue = function (field, item) {\r\n            if (!item)\r\n                item = _this.item;\r\n            if (field && item) {\r\n                var val = item[typeof field === 'string' ? field : field.name];\r\n                if (val && val.mime) // Document?\r\n                    return new Doc(val);\r\n                else\r\n                    return val;\r\n            }\r\n        };\r\n        /**\r\n         * Get the list value of a list of values field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string} List value\r\n         * @function\r\n         */\r\n        this.getFieldListValue = function (field, item) {\r\n            if (typeof field === 'string')\r\n                field = _this.getField(field);\r\n            var val = _this.getFieldValue(field, item);\r\n            return field && field.listOfValues ? _this.getListValue(field.listOfValues, val) : val;\r\n        };\r\n        /**\r\n         * Get the data URL of an inlined document/image field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string} Document/image field data URL (or nothing if the field is not of document/image type or if it is not inlined or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDataURL = function (field, item) {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.name;\r\n            var val = _this.getFieldValue(field, item);\r\n            if (val && val.mime) // Inlined\r\n                return 'data:' + val.mime + ';base64,' + (val.content || val.thumbnail);\r\n        };\r\n        /**\r\n         * Get the field's value as document/image for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @return {string|Doc} Document/image (or nothing if the field is not of document/image type or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDocument = function (field, item) {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.input || field.name;\r\n            var val = _this.getFieldValue(field, item);\r\n            if (val && val.mime)\r\n                return new Doc(val);\r\n            else\r\n                return val;\r\n        };\r\n        /**\r\n         * Get the URL of a document/image field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @param {boolean} [thumbnail=false] Thumbnail?\r\n         * @return {string} Document/image field URL (or nothing if the field is not of document/image type or if it is empty)\r\n         * @function\r\n         */\r\n        this.getFieldDocumentURL = function (field, item, thumbnail) {\r\n            if (typeof field !== 'string')\r\n                field = field.fullinput || field.input || field.name;\r\n            var val = _this.getFieldValue(field, item);\r\n            if (val && val.mime) // Inlined\r\n                val = val.id;\r\n            if (val)\r\n                return _this.session.parameters.url + _this.session.parameters.docpath\r\n                    + '?object=' + encodeURIComponent(_this.metadata.name)\r\n                    + '&inst=' + encodeURIComponent(_this.metadata.instance)\r\n                    + '&field=' + encodeURIComponent(field)\r\n                    + '&row_id=' + encodeURIComponent(_this.getRowId(item))\r\n                    + '&doc_id=' + encodeURIComponent(val)\r\n                    + (thumbnail ? '&thumbnail=true' : '')\r\n                    + (_this.session.authtoken ? '&_x_simplicite_authorization_=' + encodeURIComponent(_this.session.authtoken) : '');\r\n        };\r\n        /**\r\n         * Get list value for code\r\n         * @param {array} list List of values\r\n         * @param {string} code Code\r\n         * @return {string} Value\r\n         * @function\r\n         */\r\n        this.getListValue = function (list, code) {\r\n            if (list) {\r\n                for (var i = 0; i < list.length; i++) {\r\n                    var l = list[i];\r\n                    if (l.code === code)\r\n                        return l.value;\r\n                }\r\n            }\r\n            return code;\r\n        };\r\n        /**\r\n         * Set value of field for item (or current item)\r\n         * @param {(string|object)} field Field name or definition\r\n         * @param {(string|object)} value Value\r\n         * @param {object} [item] Item (defaults to current item)\r\n         * @function\r\n         */\r\n        this.setFieldValue = function (field, value, item) {\r\n            if (!item)\r\n                item = _this.item;\r\n            if (field && item) {\r\n                item[typeof field === 'string' ? field : field.name] = value instanceof Doc ? value.getValue() : value;\r\n            }\r\n        };\r\n        /**\r\n         * Is the field the row ID field?\r\n         * @param {object} field Field definition\r\n         * @return {boolean} True if the field is the row ID field\r\n         * @function\r\n         */\r\n        this.isRowIdField = function (field) {\r\n            return !field.ref && field.name === _this.metadata.rowidfield;\r\n        };\r\n        /**\r\n         * Is the field a timestamp field?\r\n         * @param {object} field Field definition\r\n         * @return {boolean} True if the field is a timestamp field\r\n         * @function\r\n         */\r\n        this.isTimestampField = function (field) {\r\n            var n = field.name;\r\n            return !field.ref && (n === 'created_by' || n === 'created_dt' || n === 'updated_by' || n === 'updated_dt');\r\n        };\r\n        /**\r\n         * Get current filters\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.context] Context\r\n         * @param {boolean} [opts.reset] Reset filters?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the object's filters (also available as the <code>filters</code> member)\r\n         * @function\r\n         */\r\n        this.getFilters = function (opts) {\r\n            var origin = 'BusinessObject.getFilters';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                if (opts.context)\r\n                    p += '&context=' + encodeURIComponent(opts.context);\r\n                if (opts.reset)\r\n                    p += '&reset=' + !!opts.reset;\r\n                ses.req(_this.path + '&action=filters' + p, undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.filters = r.response;\r\n                        resolve && resolve.call(_this, _this.filters);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Build options parameters\r\n         * @param {object} options Options\r\n         * @return {string} Option parameters\r\n         * @private\r\n         */\r\n        this.getReqOptions = function (options) {\r\n            var opts = '';\r\n            if (options.context)\r\n                opts += '&context=' + encodeURIComponent(options.context);\r\n            var id = options.inlineDocs || options.inlineDocuments || options.inlineImages; // Naming flexibility\r\n            if (id)\r\n                opts += '&inline_documents=' + encodeURIComponent(id.join ? id.join(',') : id);\r\n            var it = options.inlineThumbs || options.inlineThumbnails; // Naming flexibility\r\n            if (it)\r\n                opts += '&inline_thumbnails=' + encodeURIComponent(it.join ? it.join(',') : it);\r\n            var io = options.inlineObjs || options.inlineObjects; // Naming flexibility\r\n            if (io)\r\n                opts += '&inline_objects=' + encodeURIComponent(io.join ? io.join(',') : io);\r\n            return opts;\r\n        };\r\n        /**\r\n         * Build request parameters\r\n         * @param {object} data Data\r\n         * @return {string} Request parameters\r\n         * @private\r\n         */\r\n        this.getReqParams = function (data) {\r\n            var p = '';\r\n            if (!data)\r\n                return p;\r\n            var n = 0;\r\n            for (var i in data) {\r\n                var d = data[i] || '';\r\n                if (d.name && d.content) { // Document ?\r\n                    if (d.content.startsWith('data:')) // Flexibility = extract content fron data URL\r\n                        d.content = d.content.replace(/data:.*;base64,/, '');\r\n                    p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent('id|' + (d.id ? d.id : '0') + '|name|' + d.name + '|content|' + d.content);\r\n                }\r\n                else if (d.object && d.row_id) { // Object ?\r\n                    p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent('object|' + d.object + '|row_id|' + d.row_id);\r\n                }\r\n                else if (d.sort) { // Array ?\r\n                    for (var j = 0; j < d.length; j++)\r\n                        p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent(d[j]);\r\n                }\r\n                else {\r\n                    p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent(d);\r\n                }\r\n            }\r\n            return p;\r\n        };\r\n        /**\r\n         * Get count\r\n         * @param {object} [filters] Filters, defaults to current filters if not set\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the count\r\n         * @function\r\n         */\r\n        this.getCount = function (filters, opts) {\r\n            var origin = 'BusinessObject.getCount';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                _this.filters = filters || {};\r\n                ses.req(_this.path + \"&action=count\", _this.getReqParams(_this.filters), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.count = r.response.count;\r\n                        _this.page = r.response.page >= 0 ? r.response.page + 1 : undefined;\r\n                        _this.maxpage = r.response.maxpage >= 0 ? r.response.maxpage + 1 : undefined;\r\n                        _this.list = [];\r\n                        resolve && resolve.call(_this, _this.count);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Search\r\n         * @param {object} [filters] Filters, defaults to current filters if not set\r\n         * @param {object} [opts] Options\r\n         * @param {number} [opts.page] Page number, a non paginated list is returned if not set\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {boolean} [opts.visible] Return only visible fields?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<array>} Promise to a list of records (also available as the <code>list</code> member)\r\n         * @function\r\n         */\r\n        this.search = function (filters, opts) {\r\n            var origin = 'BusinessObject.search';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = _this.getReqOptions(opts);\r\n                if (opts.page > 0)\r\n                    p += '&page=' + (opts.page - 1);\r\n                if (opts.metadata === true)\r\n                    p += '&_md=true';\r\n                if (opts.visible === true)\r\n                    p += '&_visible=true';\r\n                _this.filters = filters || {};\r\n                ses.req(_this.path + '&action=search' + p, _this.getReqParams(_this.filters), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        if (res.meta)\r\n                            _this.metadata = r.response.meta;\r\n                        _this.count = r.response.count;\r\n                        _this.page = r.response.page >= 0 ? r.response.page + 1 : undefined;\r\n                        _this.maxpage = r.response.maxpage >= 0 ? r.response.maxpage + 1 : undefined;\r\n                        _this.list = r.response.list;\r\n                        resolve && resolve.call(_this, _this.list);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get\r\n         * @param {string} rowId Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {string[]} [opts.fields] List of field names to return, all fields are returned by default\r\n         * @param {string} [opts.treeview] Return the named tree view structure\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.get = function (rowId, opts) {\r\n            var origin = 'BusinessObject.get';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = _this.getReqOptions(opts);\r\n                var tv = opts.treeView;\r\n                if (tv)\r\n                    p += '&treeview=' + encodeURIComponent(tv);\r\n                if (opts.fields) {\r\n                    for (var i = 0; i < opts.fields.length; i++) {\r\n                        p += '&fields=' + encodeURIComponent(opts.fields[i].replace('.', '__'));\r\n                    }\r\n                }\r\n                if (opts.metadata)\r\n                    p += '&_md=true';\r\n                if (opts.social)\r\n                    p += '&_social=true';\r\n                ses.req(_this.path + '&action=get&' + _this.metadata.rowidfield + '=' + encodeURIComponent(rowId) + p, undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug('[simplicite.BusinessObject.get] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        if (r.response.meta)\r\n                            _this.metadata = r.response.meta;\r\n                        if (r.response.data)\r\n                            _this.item = tv ? r.response.data.item : r.response.data;\r\n                        else\r\n                            _this.item = tv ? r.response.item : r.response;\r\n                        resolve && resolve.call(_this, tv ? r.response : _this.item);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get for create\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to create (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForCreate = function (opts) {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_CREATE;\r\n            return _this.get(_this.session.constants.DEFAULT_ROW_ID, opts);\r\n        };\r\n        /**\r\n         * Get for update\r\n         * @param {string} rowId Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to update (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForUpdate = function (rowId, opts) {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_UPDATE;\r\n            return _this.get(rowId, opts);\r\n        };\r\n        /**\r\n         * Get for copy\r\n         * @param {string} rowId Row ID to copy\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to create (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForCopy = function (rowId, opts) {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_COPY;\r\n            return _this.get(rowId, opts);\r\n        };\r\n        /**\r\n         * Get for delete\r\n         * @param {string} rowId Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {boolean} [opts.metadata=false] Refresh meta data?\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the record to delete (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.getForDelete = function (rowId, opts) {\r\n            opts = opts || {};\r\n            delete opts.treeview; // Inhibited in this context\r\n            delete opts.fields; // Inhibited in this context\r\n            opts.context = constants.CONTEXT_DELETE;\r\n            return _this.get(rowId, opts);\r\n        };\r\n        /**\r\n         * Get specified or current item's row ID value\r\n         * @param {object} [item] Item, defaults to current item\r\n         * @return {string} Item's row ID value\r\n         * @function\r\n         */\r\n        this.getRowId = function (item) {\r\n            item = item || _this.item;\r\n            if (item)\r\n                return item[_this.getRowIdFieldName()];\r\n        };\r\n        /**\r\n         * Populate\r\n         * @param {string} rowId Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the populated record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.populate = function (rowId, opts) {\r\n            var origin = 'BusinessObject.populate';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = _this.getReqOptions(opts);\r\n                ses.req(_this.path + '&action=populate&' + _this.metadata.rowidfield + '=' + encodeURIComponent(rowId) + p, undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve && resolve.call(_this, _this.item);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Save (create or update depending on item row ID value)\r\n         * @param {object} item Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the saved record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.save = function (item, opts) {\r\n            if (item)\r\n                _this.item = item;\r\n            var rowId = _this.item[_this.metadata.rowidfield];\r\n            if (!rowId || rowId === constants.DEFAULT_ROW_ID)\r\n                return _this.create(item, opts);\r\n            else\r\n                return _this.update(item, opts);\r\n        };\r\n        /**\r\n         * Create (create or update)\r\n         * @param {object} item Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the created record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.create = function (item, opts) {\r\n            var origin = 'BusinessObject.create';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if (item)\r\n                    _this.item = item;\r\n                _this.item.row_id = ses.constants.DEFAULT_ROW_ID;\r\n                var p = _this.getReqOptions(opts);\r\n                ses.req(_this.path + \"&action=create\" + p, _this.getReqParams(_this.item), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve && resolve.call(_this, _this.item);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Update\r\n         * @param {object} item Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the updated record (also available as the <code>item</code> member)\r\n         * @function\r\n         */\r\n        this.update = function (item, opts) {\r\n            var origin = 'BusinessObject.update';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if (item)\r\n                    _this.item = item;\r\n                var p = _this.getReqOptions(opts);\r\n                ses.req(_this.path + '&action=update' + p, _this.getReqParams(_this.item), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.item = r.response.data ? r.response.data : r.response;\r\n                        resolve && resolve.call(_this, _this.item);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Delete\r\n         * @param {object} item Item (defaults to current item)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise (the <code>item</code> member is emptied)\r\n         * @function\r\n         */\r\n        this.del = function (item, opts) {\r\n            var origin = 'BusinessObject.del';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if (item)\r\n                    _this.item = item;\r\n                ses.req(_this.path + '&action=delete&' + _this.metadata.rowidfield + '=' + encodeURIComponent(_this.item[_this.metadata.rowidfield]), undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        _this.item = undefined;\r\n                        delete r.response.undoredo;\r\n                        resolve && resolve.call(_this, r.response);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Invoke a custom action\r\n         * @param {string} action Action name\r\n         * @param {string} [rowId] Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.parameters] Optional action parameters as key/value pairs\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<string|object>} A promise to the action result\r\n         * @function\r\n         */\r\n        this.action = function (action, rowId, opts) {\r\n            var origin = \"BusinessObject.action(\" + action + \")\";\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                ses.req(_this.path + '&action=' + encodeURIComponent(action) + (rowId ? '&' + _this.getRowIdFieldName() + '=' + encodeURIComponent(rowId) : ''), _this.getReqParams(opts.parameters), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        var result = r.response.result;\r\n                        resolve && resolve.call(_this, result);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Build a pivot table\r\n         * @param {string} ctb Pivot table name\r\n         * @param {object} [opts] Options\r\n         * @param {object} [opts.filters] Filters, by default current filters are used\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} A promise to the pivot table data (also avialable as the <code>crosstabdata</code> member)\r\n         * @function\r\n         */\r\n        this.crosstab = function (ctb, opts) {\r\n            var origin = \"BusinessObject.crosstab(\" + ctb + \")\";\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if (opts.filters)\r\n                    _this.filters = opts.filters;\r\n                ses.req(_this.path + '&action=crosstab&crosstab=' + encodeURIComponent(ctb), _this.getReqParams(_this.filters), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        resolve && resolve.call(_this, r.response);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Build a custom publication\r\n         * @param {string} prt Publication name\r\n         * @param {string} [rowId] Row ID\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<Doc>} A promise to the document of the publication\r\n         * @function\r\n         */\r\n        this.print = function (prt, rowId, opts) {\r\n            var origin = \"BusinessObject.print(\" + prt + \")\";\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                if (opts.filters)\r\n                    _this.filters = opts.filters;\r\n                var p = '';\r\n                if (opts.all)\r\n                    p += '&all=' + !!opts.all;\r\n                if (opts.mailing)\r\n                    p += '&mailing=' + !!opts.mailing;\r\n                ses.req(_this.path + '&action=print&printtemplate=' + encodeURIComponent(prt) + (rowId ? '&' + _this.getRowIdFieldName() + '=' + encodeURIComponent(rowId) : '') + p, undefined, function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug('[' + origin + '] HTTP status = ' + status + ', response type = ' + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, ses.getError(r.response, undefined, origin));\r\n                    }\r\n                    else {\r\n                        resolve && resolve.call(_this, new Doc(r.response));\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Set an object parameter\r\n         * @param {string} param Parameter name\r\n         * @param {string} value Parameter value\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise\r\n         * @function\r\n         */\r\n        this.setParameter = function (param, value, opts) {\r\n            var origin = 'BusinessObject.setParameter';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = { name: param };\r\n                if (value)\r\n                    p.value = value;\r\n                ses.req(_this.path + '&action=setparameter', _this.getReqParams(p), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, r.response);\r\n                    }\r\n                    else {\r\n                        var result = r.response.result;\r\n                        resolve && resolve.call(_this, result);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get an object parameter\r\n         * @param {string} param Parameter name\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @return {promise<object>} Promise to the parameter value\r\n         * @function\r\n         */\r\n        this.getParameter = function (param, opts) {\r\n            var origin = 'BusinessObject.getParameter';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = { name: param };\r\n                ses.req(_this.path + '&action=getparameter', _this.getReqParams(p), function (res, status) {\r\n                    var r = ses.parse(res, status);\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + status + \", response type = \" + r.type);\r\n                    if (r.type === 'error') {\r\n                        (opts.error || ses.error || reject).call(_this, r.response);\r\n                    }\r\n                    else {\r\n                        var result = r.response.result;\r\n                        resolve && resolve.call(_this, result);\r\n                    }\r\n                }, function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get an object resource URL\r\n         * @param {string} code Resource code\r\n         * @param {string} [type=IMG] Resource type (IMG=image (default), ICO=Icon, CSS=stylesheet, JS=Javascript, HTML=HTML)\r\n         * @return {string} Object resource URL\r\n         * @function\r\n         */\r\n        this.getResourceURL = function (code, type) {\r\n            return _this.session.getResourceURL(code, type, _this.metadata.name, _this.metadata.id);\r\n        };\r\n        this.session = session;\r\n        var inst = instance || 'api_' + name;\r\n        this.metadata = new BusinessObjectMetadata(name, inst);\r\n        this.cacheKey = this.session.getBusinessObjectCacheKey(name, inst);\r\n        this.path = this.session.parameters.objpath + '?object=' + encodeURIComponent(name) + '&inst=' + encodeURIComponent(inst);\r\n        this.item = {};\r\n        this.filters = {};\r\n        this.list = [];\r\n    }\r\n    return BusinessObject;\r\n}());\r\n/**\r\n * External object meta data.\r\n * <br/><span style=\"color: red;\">You <strong>should never</strong> instanciate this class directly\r\n * but rather use it from the <code>metadata</code> variable of your <code>ExternalObject</code> instances</span>.\r\n * @class\r\n */\r\nvar ExternalObjectMetadata = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {string} name External object name\r\n     */\r\n    function ExternalObjectMetadata(name) {\r\n        this.name = name;\r\n    }\r\n    return ExternalObjectMetadata;\r\n}());\r\n/**\r\n * External object.\r\n * <br/><span style=\"color: red;\">ou <strong>should never</strong> instanciate this class directly\r\n * but rather call <code>getExternalObject</code></span>.\r\n * @class\r\n */\r\nvar ExternalObject = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {Session} session Session\r\n     * @param {string} name Business object name\r\n     */\r\n    function ExternalObject(session, name) {\r\n        var _this = this;\r\n        /**\r\n         * Get name\r\n         * @return {string} Name\r\n         * @function\r\n         */\r\n        this.getName = function () {\r\n            return _this.metadata.name;\r\n        };\r\n        /**\r\n         * Build URL-encoded parameters\r\n         * @param {object} params URL parameters as key/value pairs\r\n         * @return {string} URL-encoded parameters\r\n         * @function\r\n         */\r\n        this.callParams = function (params) {\r\n            var p = '';\r\n            if (!params)\r\n                return p;\r\n            var n = 0;\r\n            for (var i in params) {\r\n                var v = params[i] || '';\r\n                if (v.sort) { // Array ?\r\n                    for (var j = 0; j < v.length; j++)\r\n                        p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent(v[j]);\r\n                }\r\n                else {\r\n                    p += (n++ !== 0 ? '&' : '') + i + '=' + encodeURIComponent(v);\r\n                }\r\n            }\r\n            return p;\r\n        };\r\n        /**\r\n         * Call an external object\r\n         * @param {object} [params] Optional URL parameters\r\n         * @param {object} [data] Optional data (for 'POST' and 'PUT' methods only)\r\n         * @param {object} [opts] Options\r\n         * @param {function} [opts.error] Error handler function\r\n         * @param {object} [opts.method] Optional method 'GET', 'POST', 'PUT' or 'DELETE' (defaults to 'GET' if data is not set or 'POST' if data is set\r\n         * @param {function} [opts.contentType] Optional data content type (for 'POST' and 'PUT' methods only)\r\n         * @return {promise<object>} Promise to the external object content\r\n         * @function\r\n         */\r\n        this.call = function (params, data, opts) {\r\n            var origin = 'ExternalObject.call';\r\n            var ses = _this.session;\r\n            opts = opts || {};\r\n            return new Promise(function (resolve, reject) {\r\n                var p = '';\r\n                if (params)\r\n                    p = '?' + _this.callParams(params);\r\n                var m = opts.method ? opts.method.toUpperCase() : (data ? 'POST' : 'GET');\r\n                var h = {};\r\n                if (opts.contentType) {\r\n                    h['Content-Type'] = opts.contentType;\r\n                }\r\n                else if (data) { // Try to guess type...\r\n                    h['Content-Type'] = typeof data === 'string' ? 'application/x-www-form-urlencoded' : 'application/json';\r\n                }\r\n                var b = ses.getBearerTokenHeader();\r\n                if (b) {\r\n                    h['X-Simplicite-Authorization'] = b;\r\n                }\r\n                else {\r\n                    b = ses.getBasicAuthHeader();\r\n                    if (b)\r\n                        h.Authorization = b;\r\n                }\r\n                var u = ses.parameters.url + _this.path + p;\r\n                var d = data ? (typeof data === 'string' ? data : JSON.stringify(data)) : undefined;\r\n                ses.debug('[simplicite.ExternalObject.call] ' + m + ' ' + u + ' with ' + (d ? ' with ' + d : ''));\r\n                (0, node_fetch_1.default)(u, {\r\n                    method: m,\r\n                    headers: h,\r\n                    timeout: ses.parameters.timeout * 1000,\r\n                    mode: 'cors',\r\n                    credentials: 'include',\r\n                    body: d\r\n                }).then(function (res) {\r\n                    var type = res.headers.get('content-type');\r\n                    ses.debug(\"[\" + origin + \"] HTTP status = \" + res.status + \", response content type = \" + type);\r\n                    if (type && type.startsWith('application/json')) { // JSON\r\n                        res.json().then(function (jsonData) {\r\n                            resolve && resolve.call(_this, jsonData, res.status, res.headers);\r\n                        }).catch(function (err) {\r\n                            (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                        });\r\n                    }\r\n                    else if (type && type.startsWith('text/')) { // Text\r\n                        res.text().then(function (textData) {\r\n                            resolve && resolve.call(_this, textData, res.status, res.headers);\r\n                        }).catch(function (err) {\r\n                            (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                        });\r\n                    }\r\n                    else { // Binary\r\n                        res.arrayBuffer().then(function (binData) {\r\n                            resolve && resolve.call(_this, binData, res.status, res.headers);\r\n                        }).catch(function (err) {\r\n                            (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                        });\r\n                    }\r\n                }).catch(function (err) {\r\n                    (opts.error || ses.error || reject).call(_this, ses.getError(err, undefined, origin));\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Alias to <code>call</code>\r\n         * @function\r\n         */\r\n        this.invoke = this.call;\r\n        this.session = session;\r\n        this.metadata = new ExternalObjectMetadata(name);\r\n        this.path = this.session.parameters.extpath + '/' + encodeURIComponent(name);\r\n    }\r\n    return ExternalObject;\r\n}());\r\nexports.default = {\r\n    constants: constants,\r\n    session: session,\r\n    Session: Session,\r\n    Doc: Doc,\r\n    Grant: Grant,\r\n    BusinessObject: BusinessObject,\r\n    BusinessObjectMetadata: BusinessObjectMetadata,\r\n    ExternalObject: ExternalObject\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
